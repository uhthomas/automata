// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go sigs.k8s.io/controller-runtime/pkg/webhook/admission

package admission

import (
	admissionv1 "k8s.io/api/admission/v1"
	"gomodules.xyz/jsonpatch/v2:jsonpatch"
)

// Request defines the input for an admission handler.
// It contains information to identify the object in
// question (group, version, kind, resource, subresource,
// name, namespace), as well as the operation in question
// (e.g. Get, Create, etc), and the object itself.
#Request: {
	AdmissionRequest: admissionv1.#AdmissionRequest
}

// Response is the output of an admission handler.
// It contains a response indicating if a given
// operation is allowed, as well as a set of patches
// to mutate the object in the case of a mutating admission handler.
#Response: {
	// Patches are the JSON patches for mutating webhooks.
	// Using this instead of setting Response.Patch to minimize
	// overhead of serialization and deserialization.
	// Patches set here will override any patches in the response,
	// so leave this empty if you want to set the patch response directly.
	Patches: [...jsonpatch.#Operation] @go(,[]jsonpatch.JsonPatchOperation)

	// AdmissionResponse is the raw admission response.
	// The Patch field in it will be overwritten by the listed patches.
	AdmissionResponse: admissionv1.#AdmissionResponse
}

// Handler can handle an AdmissionRequest.
#Handler: _

// Webhook represents each individual webhook.
//
// It must be registered with a webhook.Server or
// populated by StandaloneWebhook to be ran on an arbitrary HTTP server.
#Webhook: {
	// Handler actually processes an admission request returning whether it was allowed or denied,
	// and potentially patches to apply to the handler.
	Handler: #Handler

	// RecoverPanic indicates whether the panic caused by webhook should be recovered.
	// Defaults to true.
	RecoverPanic?: null | bool @go(,*bool)
}

// StandaloneOptions let you configure a StandaloneWebhook.
#StandaloneOptions: {
	// MetricsPath is used for labelling prometheus metrics
	// by the path is served on.
	// If none is set, prometheus metrics will not be generated.
	MetricsPath: string
}

// requestContextKey is how we find the admission.Request in a context.Context.
_#requestContextKey: {}
