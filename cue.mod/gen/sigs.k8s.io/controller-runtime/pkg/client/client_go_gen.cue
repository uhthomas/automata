// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go sigs.k8s.io/controller-runtime/pkg/client

package client

import (
	"k8s.io/apimachinery/pkg/api/meta"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Options are creation options for a Client.
#Options: {
	// HTTPClient is the HTTP client to use for requests.
	HTTPClient?: null | _ @go(,*http.Client)

	// Mapper, if provided, will be used to map GroupVersionKinds to Resources
	Mapper: meta.#RESTMapper

	// Cache, if provided, is used to read objects from the cache.
	Cache?: null | #CacheOptions @go(,*CacheOptions)

	// DryRun instructs the client to only perform dry run requests.
	DryRun?: null | bool @go(,*bool)
}

// CacheOptions are options for creating a cache-backed client.
#CacheOptions: {
	// Reader is a cache-backed reader that will be used to read objects from the cache.
	// +required
	Reader: #Reader

	// DisableFor is a list of objects that should never be read from the cache.
	// Objects configured here always result in a live lookup.
	DisableFor: [...#Object] @go(,[]Object)

	// Unstructured is a flag that indicates whether the cache-backed client should
	// read unstructured objects or lists from the cache.
	// If false, unstructured objects will always result in a live lookup.
	Unstructured: bool
}

// SubResourceGetOptions holds all the possible configuration
// for a subresource Get request.
#SubResourceGetOptions: {
	Raw?: null | metav1.#GetOptions @go(,*metav1.GetOptions)
}

// SubResourceUpdateOptions holds all the possible configuration
// for a subresource update request.
#SubResourceUpdateOptions: {
	UpdateOptions:   #UpdateOptions
	SubResourceBody: #Object
}

// SubResourceUpdateAndPatchOption is an option that can be used for either
// a subresource update or patch request.
#SubResourceUpdateAndPatchOption: _

// SubResourceCreateOptions are all the possible configurations for a subresource
// create request.
#SubResourceCreateOptions: {
	CreateOptions: #CreateOptions
}

// SubResourcePatchOptions holds all possible configurations for a subresource patch
// request.
#SubResourcePatchOptions: {
	PatchOptions:    #PatchOptions
	SubResourceBody: #Object
}
