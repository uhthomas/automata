// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go sigs.k8s.io/controller-runtime/pkg/cache/internal

package internal

import (
	"k8s.io/apimachinery/pkg/api/meta"
	"k8s.io/client-go/tools/cache"
)

// InformersOpts configures an InformerMap.
#InformersOpts: {
	HTTPClient?:           null | _ @go(,*http.Client)
	Mapper:                meta.#RESTMapper
	ResyncPeriod:          int @go(,time.Duration)
	Namespace:             string
	Selector:              #Selector
	UnsafeDisableDeepCopy: bool
	EnableWatchBookmarks:  bool
}

// Cache contains the cached data for an Cache.
#Cache: {
	// Informer is the cached informer
	Informer: cache.#SharedIndexInformer
}

// GetOptions provides configuration to customize the behavior when
// getting an informer.
#GetOptions: {
	// BlockUntilSynced controls if the informer retrieval will block until the informer is synced. Defaults to `true`.
	BlockUntilSynced?: null | bool @go(,*bool)
}
