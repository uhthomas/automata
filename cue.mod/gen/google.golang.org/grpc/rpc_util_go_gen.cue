// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go google.golang.org/grpc

package grpc

import (
	"google.golang.org/grpc/metadata"
	"google.golang.org/grpc/peer"
	"google.golang.org/grpc/credentials"
	"google.golang.org/grpc/encoding"
)

// Compressor defines the interface gRPC uses to compress a message.
//
// Deprecated: use package encoding.
#Compressor: _

// Decompressor defines the interface gRPC uses to decompress a message.
//
// Deprecated: use package encoding.
#Decompressor: _

// CallOption configures a Call before it starts or extracts information from
// a Call after it completes.
#CallOption: _

// EmptyCallOption does not alter the Call configuration.
// It can be embedded in another structure to carry satellite data for use
// by interceptors.
#EmptyCallOption: {}

// StaticMethodCallOption is a CallOption that specifies that a call comes
// from a static method.
#StaticMethodCallOption: {
	EmptyCallOption: #EmptyCallOption
}

// HeaderCallOption is a CallOption for collecting response header metadata.
// The metadata field will be populated *after* the RPC completes.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#HeaderCallOption: {
	HeaderAddr?: null | metadata.#MD @go(,*metadata.MD)
}

// TrailerCallOption is a CallOption for collecting response trailer metadata.
// The metadata field will be populated *after* the RPC completes.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#TrailerCallOption: {
	TrailerAddr?: null | metadata.#MD @go(,*metadata.MD)
}

// PeerCallOption is a CallOption for collecting the identity of the remote
// peer. The peer field will be populated *after* the RPC completes.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#PeerCallOption: {
	PeerAddr?: null | peer.#Peer @go(,*peer.Peer)
}

// FailFastCallOption is a CallOption for indicating whether an RPC should fail
// fast or not.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#FailFastCallOption: {
	FailFast: bool
}

// MaxRecvMsgSizeCallOption is a CallOption that indicates the maximum message
// size in bytes the client can receive.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#MaxRecvMsgSizeCallOption: {
	MaxRecvMsgSize: int
}

// AuthorityOverrideCallOption is a CallOption that indicates the HTTP/2
// :authority header value to use for the call.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a later
// release.
#AuthorityOverrideCallOption: {
	Authority: string
}

// MaxSendMsgSizeCallOption is a CallOption that indicates the maximum message
// size in bytes the client can send.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#MaxSendMsgSizeCallOption: {
	MaxSendMsgSize: int
}

// PerRPCCredsCallOption is a CallOption that indicates the per-RPC
// credentials to use for the call.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#PerRPCCredsCallOption: {
	Creds: credentials.#PerRPCCredentials
}

// CompressorCallOption is a CallOption that indicates the compressor to use.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#CompressorCallOption: {
	CompressorType: string
}

// ContentSubtypeCallOption is a CallOption that indicates the content-subtype
// used for marshaling messages.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#ContentSubtypeCallOption: {
	ContentSubtype: string
}

// ForceCodecCallOption is a CallOption that indicates the codec used for
// marshaling messages.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#ForceCodecCallOption: {
	Codec: encoding.#Codec
}

// ForceCodecV2CallOption is a CallOption that indicates the codec used for
// marshaling messages.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#ForceCodecV2CallOption: {
	CodecV2: encoding.#CodecV2
}

// CustomCodecCallOption is a CallOption that indicates the codec used for
// marshaling messages.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#CustomCodecCallOption: {
	Codec: #Codec
}

// MaxRetryRPCBufferSizeCallOption is a CallOption indicating the amount of
// memory to be used for caching this RPC for retry purposes.
//
// # Experimental
//
// Notice: This type is EXPERIMENTAL and may be changed or removed in a
// later release.
#MaxRetryRPCBufferSizeCallOption: {
	MaxRetryRPCBufferSize: int
}

// The format of the payload: compressed or not?
_#payloadFormat: uint8

_#compressionNone: _#payloadFormat & 0
_#compressionMade: _#payloadFormat & 1

_#streamReader: _

_#payloadLen: 1
_#sizeLen:    4
_#headerLen:  5

_#recvCompressor: _

_#rpcInfoContextKey: {}

#SupportPackageIsVersion3: true
#SupportPackageIsVersion4: true
#SupportPackageIsVersion5: true
#SupportPackageIsVersion6: true
#SupportPackageIsVersion7: true
#SupportPackageIsVersion8: true
#SupportPackageIsVersion9: true

_#grpcUA: "grpc-go/1.74.2"
