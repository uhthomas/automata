// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go google.golang.org/grpc

package grpc

import (
	internalserviceconfig "google.golang.org/grpc/internal/serviceconfig"
	"google.golang.org/grpc/serviceconfig"
	"google.golang.org/grpc/codes"
)

_#maxInt: int & 9223372036854775807

// MethodConfig defines the configuration recommended by the service providers for a
// particular method.
//
// Deprecated: Users should not use this struct. Service config should be received
// through name resolver, as specified here
// https://github.com/grpc/grpc/blob/master/doc/service_config.md
#MethodConfig: internalserviceconfig.#MethodConfig

// ServiceConfig is provided by the service provider and contains parameters for how
// clients that connect to the service should behave.
//
// Deprecated: Users should not use this struct. Service config should be received
// through name resolver, as specified here
// https://github.com/grpc/grpc/blob/master/doc/service_config.md
#ServiceConfig: {
	Config: serviceconfig.#Config

	// Methods contains a map for the methods in this service.  If there is an
	// exact match for a method (i.e. /service/method) in the map, use the
	// corresponding MethodConfig.  If there's no exact match, look for the
	// default config for the service (/service/) and use the corresponding
	// MethodConfig if it exists.  Otherwise, the method has no MethodConfig to
	// use.
	Methods: {[string]: internalserviceconfig.#MethodConfig} @go(,map[string]MethodConfig)
}

// healthCheckConfig defines the go-native version of the LB channel health check config.
_#healthCheckConfig: {
	// serviceName is the service name to use in the health-checking request.
	ServiceName: string
}

_#jsonRetryPolicy: {
	MaxAttempts:       int
	InitialBackoff:    internalserviceconfig.#Duration
	MaxBackoff:        internalserviceconfig.#Duration
	BackoffMultiplier: float64
	RetryableStatusCodes: [...codes.#Code] @go(,[]codes.Code)
}

// retryThrottlingPolicy defines the go-native version of the retry throttling
// policy defined by the service config here:
// https://github.com/grpc/proposal/blob/master/A6-client-retries.md#integration-with-service-config
_#retryThrottlingPolicy: {
	// The number of tokens starts at maxTokens. The token_count will always be
	// between 0 and maxTokens.
	//
	// This field is required and must be greater than zero.
	MaxTokens: float64

	// The amount of tokens to add on each successful RPC. Typically this will
	// be some number between 0 and 1, e.g., 0.1.
	//
	// This field is required and must be greater than zero. Up to 3 decimal
	// places are supported.
	TokenRatio: float64
}

_#jsonName: {
	Service: string
	Method:  string
}

// TODO(lyuxuan): delete this struct after cleaning up old service config implementation.
_#jsonMC: {
	Name?: null | [..._#jsonName] @go(,*[]jsonName)
	WaitForReady?:            null | bool                            @go(,*bool)
	Timeout?:                 null | internalserviceconfig.#Duration @go(,*internalserviceconfig.Duration)
	MaxRequestMessageBytes?:  null | int64                           @go(,*int64)
	MaxResponseMessageBytes?: null | int64                           @go(,*int64)
	RetryPolicy?:             null | _#jsonRetryPolicy               @go(,*jsonRetryPolicy)
}

// TODO(lyuxuan): delete this struct after cleaning up old service config implementation.
_#jsonSC: {
	LoadBalancingPolicy?: null | string @go(,*string)
	LoadBalancingConfig?: null | _      @go(,*json.RawMessage)
	MethodConfig?: null | [..._#jsonMC] @go(,*[]jsonMC)
	RetryThrottling?:   null | _#retryThrottlingPolicy @go(,*retryThrottlingPolicy)
	HealthCheckConfig?: null | _#healthCheckConfig     @go(,*healthCheckConfig)
}
