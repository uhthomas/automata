// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/VictoriaMetrics/operator/api/operator/v1beta1

package v1beta1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// VMAlertmanager represents Victoria-Metrics deployment for Alertmanager.
// +operator-sdk:gen-csv:customresourcedefinitions.displayName="VMAlertmanager App"
// +operator-sdk:gen-csv:customresourcedefinitions.resources="StatefulSet,apps"
// +operator-sdk:gen-csv:customresourcedefinitions.resources="Service,v1"
// +operator-sdk:gen-csv:customresourcedefinitions.resources="Secret,v1"
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +genclient
// +k8s:openapi-gen=true
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="ReplicaCount",type="integer",JSONPath=".spec.replicaCount",description="The desired replicas number of Alertmanagers"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:path=vmalertmanagers,scope=Namespaced,shortName=vma,singular=vmalertmanager
// +kubebuilder:printcolumn:name="Update Status",type="string",JSONPath=".status.updateStatus",description="Current update status"
#VMAlertmanager: _

// VMAlertmanagerSpec is a specification of the desired behavior of the VMAlertmanager cluster. More info:
// https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
// +k8s:openapi-gen=true
#VMAlertmanagerSpec: _

// VMAlertmanagerList is a list of Alertmanagers.
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
#VMAlertmanagerList: {
	metav1.#TypeMeta

	// Standard list metadata
	// More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
	metadata?: metav1.#ListMeta @go(ListMeta)

	// List of Alertmanagers
	items: [...#VMAlertmanager] @go(Items,[]VMAlertmanager)
}

// VMAlertmanagerStatus is the most recent observed status of the VMAlertmanager cluster
// Operator API itself. More info:
#VMAlertmanagerStatus: {
	#StatusMetadata
}

// AlertmanagerGossipConfig defines Gossip TLS configuration for alertmanager
#AlertmanagerGossipConfig: {
	// TLSServerConfig defines server TLS configuration for alertmanager
	tls_server_config?: null | #TLSServerConfig @go(TLSServerConfig,*TLSServerConfig)

	// TLSClientConfig defines client TLS configuration for alertmanager
	tls_client_config?: null | #TLSClientConfig @go(TLSClientConfig,*TLSClientConfig)
}

// AlertmanagerWebConfig defines web server configuration for alertmanager
#AlertmanagerWebConfig: {
	// TLSServerConfig defines server TLS configuration for alertmanager
	// +optional
	tls_server_config?: null | #TLSServerConfig @go(TLSServerConfig,*TLSServerConfig)

	// HTTPServerConfig defines http server configuration for alertmanager web server
	// +optional
	http_server_config?: null | #AlertmanagerHTTPConfig @go(HTTPServerConfig,*AlertmanagerHTTPConfig)

	// BasicAuthUsers Usernames and hashed passwords that have full access to the web server
	// Passwords must be hashed with bcrypt
	// +optional
	basic_auth_users?: {[string]: string} @go(BasicAuthUsers,map[string]string)
}

// AlertmanagerHTTPConfig defines http server configuration for alertmanager
#AlertmanagerHTTPConfig: {
	// HTTP2 enables HTTP/2 support. Note that HTTP/2 is only supported with TLS.
	// This can not be changed on the fly.
	// +optional
	http2?: bool @go(HTTP2)

	// Headers defines list of headers that can be added to HTTP responses.
	// +optional
	headers?: {[string]: string} @go(Headers,map[string]string)
}
