// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/vishvananda/netlink/nl

// Package nl has low level primitives for making Netlink calls.
package nl

import "golang.org/x/sys/unix"

// Family type definitions
#FAMILY_ALL:  0
#FAMILY_V4:   2
#FAMILY_V6:   10
#FAMILY_MPLS: 28

// Arbitrary set value (greater than default 4k) to allow receiving
// from kernel more verbose messages e.g. for statistics,
// tc rules or filters, or other more memory requiring data.
#RECEIVE_BUFFER_SIZE: 65536

// Kernel netlink pid
#PidKernel:     uint32 & 0
#SizeofCnMsgOp: 0x18

// errDumpInterrupted is an error type, used to report that NLM_F_DUMP_INTR was
// set in a netlink response.
_#errDumpInterrupted: {}

#NLMSGERR_ATTR_UNUSED: 0
#NLMSGERR_ATTR_MSG:    1
#NLMSGERR_ATTR_OFFS:   2
#NLMSGERR_ATTR_COOKIE: 3
#NLMSGERR_ATTR_POLICY: 4

#NetlinkRequestData: _

#PROC_CN_MCAST_LISTEN: 1
#PROC_CN_MCAST_IGNORE: 1

#CbID: {
	Idx: uint32
	Val: uint32
}

#CnMsg: {
	ID:     #CbID
	Seq:    uint32
	Ack:    uint32
	Length: uint16
	Flags:  uint16
}

#CnMsgOp: {
	CnMsg: #CnMsg

	// here we differ from the C header
	Op: uint32
}

// IfInfomsg is related to links, but it is used for list requests as well
#IfInfomsg: {
	IfInfomsg: unix.#IfInfomsg
}

#Uint32Bitfield: {
	Value:    uint32
	Selector: uint32
}

#Uint32Attribute: {
	Type:  uint16
	Value: uint32
}

// Extend RtAttr to handle data and children
#RtAttr: {
	RtAttr: unix.#RtAttr
	Data:   bytes @go(,[]byte)
}

#NetlinkRequest: {
	NlMsghdr: unix.#NlMsghdr
	Data: [...#NetlinkRequestData] @go(,[]NetlinkRequestData)
	RawData: bytes @go(,[]byte)
}

// SocketHandle contains the netlink socket and the associated
// sequence counter for a specific netlink family
#SocketHandle: {
	Seq: uint32
}
