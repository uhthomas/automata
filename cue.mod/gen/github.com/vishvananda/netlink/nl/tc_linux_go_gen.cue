// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/vishvananda/netlink/nl

package nl

#LINKLAYER_UNSPEC:   0
#LINKLAYER_ETHERNET: 1
#LINKLAYER_ATM:      2

#ATM_CELL_PAYLOAD: 48
#ATM_CELL_SIZE:    53

#TC_LINKLAYER_MASK: 0x0F

#TCA_POLICE_UNSPEC:   0
#TCA_POLICE_TBF:      1
#TCA_POLICE_RATE:     2
#TCA_POLICE_PEAKRATE: 3
#TCA_POLICE_AVRATE:   4
#TCA_POLICE_RESULT:   5
#TCA_POLICE_MAX:      5

#TCA_UNSPEC:         0
#TCA_KIND:           1
#TCA_OPTIONS:        2
#TCA_STATS:          3
#TCA_XSTATS:         4
#TCA_RATE:           5
#TCA_FCNT:           6
#TCA_STATS2:         7
#TCA_STAB:           8
#TCA_PAD:            9
#TCA_DUMP_INVISIBLE: 10
#TCA_CHAIN:          11
#TCA_HW_OFFLOAD:     12
#TCA_INGRESS_BLOCK:  13
#TCA_EGRESS_BLOCK:   14
#TCA_DUMP_FLAGS:     15
#TCA_MAX:            15

#TCA_ACT_TAB: 1
#TCAA_MAX:    1

#TCA_ACT_UNSPEC:        0
#TCA_ACT_KIND:          1
#TCA_ACT_OPTIONS:       2
#TCA_ACT_INDEX:         3
#TCA_ACT_STATS:         4
#TCA_ACT_PAD:           5
#TCA_ACT_COOKIE:        6
#TCA_ACT_FLAGS:         7
#TCA_ACT_HW_STATS:      8
#TCA_ACT_USED_HW_STATS: 9
#TCA_ACT_IN_HW_COUNT:   10
#TCA_ACT_MAX:           11

#TCA_ACT_SAMPLE_UNSPEC:        0
#TCA_ACT_SAMPLE_TM:            1
#TCA_ACT_SAMPLE_PARMS:         2
#TCA_ACT_SAMPLE_RATE:          3
#TCA_ACT_SAMPLE_TRUNC_SIZE:    4
#TCA_ACT_SAMPLE_PSAMPLE_GROUP: 5
#TCA_ACT_SAMPLE_PAD:           6
#TCA_ACT_SAMPLE_MAX:           7

#TCA_PRIO_UNSPEC: 0
#TCA_PRIO_MQ:     1
#TCA_PRIO_MAX:    1

#TCA_STATS_UNSPEC:     0
#TCA_STATS_BASIC:      1
#TCA_STATS_RATE_EST:   2
#TCA_STATS_QUEUE:      3
#TCA_STATS_APP:        4
#TCA_STATS_RATE_EST64: 5
#TCA_STATS_PAD:        6
#TCA_STATS_BASIC_HW:   7
#TCA_STATS_PKT64:      8
#TCA_STATS_MAX:        8

#SizeofTcMsg:          0x14
#SizeofTcActionMsg:    0x04
#SizeofTcPrioMap:      0x14
#SizeofTcRateSpec:     0x0c
#SizeofTcNetemQopt:    0x18
#SizeofTcNetemCorr:    0x0c
#SizeofTcNetemReorder: 0x08
#SizeofTcNetemCorrupt: 0x08
#SizeOfTcNetemRate:    0x10
#SizeofTcTbfQopt:      36
#SizeofTcHtbCopt:      44
#SizeofTcHtbGlob:      0x14
#SizeofTcU32Key:       0x10
#SizeofTcU32Sel:       0x10
#SizeofTcGen:          0x16
#SizeofTcConnmark:     26
#SizeofTcCsum:         26
#SizeofTcMirred:       30
#SizeofTcVlan:         26
#SizeofTcTunnelKey:    26
#SizeofTcSkbEdit:      22
#SizeofTcPolice:       56
#SizeofTcSfqQopt:      0x0b
#SizeofTcSfqRedStats:  0x18
#SizeofTcSfqQoptV1:    63
#SizeofUint32Bitfield: 0x8

#TcMsg: {
	Family:  uint8
	Pad:     bytes @go(,[3]byte)
	Ifindex: int32
	Handle:  uint32
	Parent:  uint32
	Info:    uint32
}

#Tcf: {
	Install:  uint64
	LastUse:  uint64
	Expires:  uint64
	FirstUse: uint64
}

#TcActionMsg: {
	Family: uint8
	Pad:    bytes @go(,[3]byte)
}

#TC_PRIO_MAX: 15

#TcPrioMap: {
	Bands: int32
	Priomap: 16 * [uint8] @go(,[16]uint8)
}

#TCA_TBF_UNSPEC:  0
#TCA_TBF_PARMS:   1
#TCA_TBF_RTAB:    2
#TCA_TBF_PTAB:    3
#TCA_TBF_RATE64:  4
#TCA_TBF_PRATE64: 5
#TCA_TBF_BURST:   6
#TCA_TBF_PBURST:  7
#TCA_TBF_MAX:     7

#TcRateSpec: {
	CellLog:   uint8
	Linklayer: uint8
	Overhead:  uint16
	CellAlign: int16
	Mpu:       uint16
	Rate:      uint32
}

#TCA_NETEM_UNSPEC:     0
#TCA_NETEM_CORR:       1
#TCA_NETEM_DELAY_DIST: 2
#TCA_NETEM_REORDER:    3
#TCA_NETEM_CORRUPT:    4
#TCA_NETEM_LOSS:       5
#TCA_NETEM_RATE:       6
#TCA_NETEM_ECN:        7
#TCA_NETEM_RATE64:     8
#TCA_NETEM_MAX:        8

#TcNetemQopt: {
	Latency:   uint32
	Limit:     uint32
	Loss:      uint32
	Gap:       uint32
	Duplicate: uint32
	Jitter:    uint32
}

#TcNetemCorr: {
	DelayCorr: uint32
	LossCorr:  uint32
	DupCorr:   uint32
}

#TcNetemReorder: {
	Probability: uint32
	Correlation: uint32
}

#TcNetemCorrupt: {
	Probability: uint32
	Correlation: uint32
}

// TcNetemRate is a struct that represents the rate of a netem qdisc
#TcNetemRate: {
	Rate:           uint32
	PacketOverhead: int32
	CellSize:       uint32
	CellOverhead:   int32
}

#TcTbfQopt: {
	Rate:     #TcRateSpec
	Peakrate: #TcRateSpec
	Limit:    uint32
	Buffer:   uint32
	Mtu:      uint32
}

#TCA_HTB_UNSPEC:      0
#TCA_HTB_PARMS:       1
#TCA_HTB_INIT:        2
#TCA_HTB_CTAB:        3
#TCA_HTB_RTAB:        4
#TCA_HTB_DIRECT_QLEN: 5
#TCA_HTB_RATE64:      6
#TCA_HTB_CEIL64:      7
#TCA_HTB_MAX:         7

#TcHtbCopt: {
	Rate:    #TcRateSpec
	Ceil:    #TcRateSpec
	Buffer:  uint32
	Cbuffer: uint32
	Quantum: uint32
	Level:   uint32
	Prio:    uint32
}

#TcHtbGlob: {
	Version:      uint32
	Rate2Quantum: uint32
	Defcls:       uint32
	Debug:        uint32
	DirectPkts:   uint32
}

#TcHfscOpt: Defcls: uint16

#TCA_U32_UNSPEC:  0
#TCA_U32_CLASSID: 1
#TCA_U32_HASH:    2
#TCA_U32_LINK:    3
#TCA_U32_DIVISOR: 4
#TCA_U32_SEL:     5
#TCA_U32_POLICE:  6
#TCA_U32_ACT:     7
#TCA_U32_INDEV:   8
#TCA_U32_PCNT:    9
#TCA_U32_MARK:    10
#TCA_U32_MAX:     10

#TcU32Key: {
	Mask:    uint32
	Val:     uint32
	Off:     int32
	OffMask: int32
}

#TC_U32_TERMINAL:  1
#TC_U32_OFFSET:    2
#TC_U32_VAROFFSET: 4
#TC_U32_EAT:       8

#TcU32Sel: {
	Flags:    uint8
	Offshift: uint8
	Nkeys:    uint8
	Pad:      uint8
	Offmask:  uint16
	Off:      uint16
	Offoff:   int16
	Hoff:     int16
	Hmask:    uint32
	Keys: [...#TcU32Key] @go(,[]TcU32Key)
}

#TcGen: {
	Index:   uint32
	Capab:   uint32
	Action:  int32
	Refcnt:  int32
	Bindcnt: int32
}

#TCA_ACT_GACT: 5

#TCA_GACT_UNSPEC: 0
#TCA_GACT_TM:     1
#TCA_GACT_PARMS:  2
#TCA_GACT_PROB:   3
#TCA_GACT_MAX:    3

#TcGact: #TcGen

#TCA_ACT_BPF: 13

#TCA_ACT_BPF_UNSPEC:  0
#TCA_ACT_BPF_TM:      1
#TCA_ACT_BPF_PARMS:   2
#TCA_ACT_BPF_OPS_LEN: 3
#TCA_ACT_BPF_OPS:     4
#TCA_ACT_BPF_FD:      5
#TCA_ACT_BPF_NAME:    6
#TCA_ACT_BPF_MAX:     6

#TCA_BPF_FLAG_ACT_DIRECT: uint32 & 1

#TCA_BPF_UNSPEC:    0
#TCA_BPF_ACT:       1
#TCA_BPF_POLICE:    2
#TCA_BPF_CLASSID:   3
#TCA_BPF_OPS_LEN:   4
#TCA_BPF_OPS:       5
#TCA_BPF_FD:        6
#TCA_BPF_NAME:      7
#TCA_BPF_FLAGS:     8
#TCA_BPF_FLAGS_GEN: 9
#TCA_BPF_TAG:       10
#TCA_BPF_ID:        11
#TCA_BPF_MAX:       11

#TcBpf: #TcGen

#TCA_ACT_CONNMARK: 14

#TCA_CONNMARK_UNSPEC: 0
#TCA_CONNMARK_PARMS:  1
#TCA_CONNMARK_TM:     2
#TCA_CONNMARK_MAX:    2

#TcConnmark: {
	TcGen: #TcGen
	Zone:  uint16
}

#TCA_CSUM_UNSPEC: 0
#TCA_CSUM_PARMS:  1
#TCA_CSUM_TM:     2
#TCA_CSUM_PAD:    3
#TCA_CSUM_MAX:    3

#TcCsum: {
	TcGen:       #TcGen
	UpdateFlags: uint32
}

#TCA_ACT_MIRRED: 8

#TCA_MIRRED_UNSPEC: 0
#TCA_MIRRED_TM:     1
#TCA_MIRRED_PARMS:  2
#TCA_MIRRED_MAX:    2

#TcMirred: {
	TcGen:   #TcGen
	Eaction: int32
	Ifindex: uint32
}

#TCA_VLAN_UNSPEC:             0
#TCA_VLAN_TM:                 1
#TCA_VLAN_PARMS:              2
#TCA_VLAN_PUSH_VLAN_ID:       3
#TCA_VLAN_PUSH_VLAN_PROTOCOL: 4
#TCA_VLAN_PAD:                5
#TCA_VLAN_PUSH_VLAN_PRIORITY: 6
#TCA_VLAN_PUSH_ETH_DST:       7
#TCA_VLAN_PUSH_ETH_SRC:       8
#TCA_VLAN_MAX:                9

#TcVlan: {
	TcGen:  #TcGen
	Action: int32
}

#TCA_TUNNEL_KEY_UNSPEC:       0
#TCA_TUNNEL_KEY_TM:           1
#TCA_TUNNEL_KEY_PARMS:        2
#TCA_TUNNEL_KEY_ENC_IPV4_SRC: 3
#TCA_TUNNEL_KEY_ENC_IPV4_DST: 4
#TCA_TUNNEL_KEY_ENC_IPV6_SRC: 5
#TCA_TUNNEL_KEY_ENC_IPV6_DST: 6
#TCA_TUNNEL_KEY_ENC_KEY_ID:   7
#TCA_TUNNEL_KEY_PAD:          8
#TCA_TUNNEL_KEY_ENC_DST_PORT: 9
#TCA_TUNNEL_KEY_NO_CSUM:      10
#TCA_TUNNEL_KEY_ENC_OPTS:     11
#TCA_TUNNEL_KEY_ENC_TOS:      12
#TCA_TUNNEL_KEY_ENC_TTL:      13
#TCA_TUNNEL_KEY_MAX:          14

#TcTunnelKey: {
	TcGen:  #TcGen
	Action: int32
}

#TCA_SKBEDIT_UNSPEC:        0
#TCA_SKBEDIT_TM:            1
#TCA_SKBEDIT_PARMS:         2
#TCA_SKBEDIT_PRIORITY:      3
#TCA_SKBEDIT_QUEUE_MAPPING: 4
#TCA_SKBEDIT_MARK:          5
#TCA_SKBEDIT_PAD:           6
#TCA_SKBEDIT_PTYPE:         7
#TCA_SKBEDIT_MASK:          8
#TCA_SKBEDIT_MAX:           9

#TcSkbEdit: TcGen: #TcGen

#TcPolice: {
	Index:    uint32
	Action:   int32
	Limit:    uint32
	Burst:    uint32
	Mtu:      uint32
	Rate:     #TcRateSpec
	PeakRate: #TcRateSpec
	Refcnt:   int32
	Bindcnt:  int32
	Capab:    uint32
}

#TCA_FW_UNSPEC:  0
#TCA_FW_CLASSID: 1
#TCA_FW_POLICE:  2
#TCA_FW_INDEV:   3
#TCA_FW_ACT:     4
#TCA_FW_MASK:    5
#TCA_FW_MAX:     5

#TCA_MATCHALL_UNSPEC:  0
#TCA_MATCHALL_CLASSID: 1
#TCA_MATCHALL_ACT:     2
#TCA_MATCHALL_FLAGS:   3

#TCA_FQ_UNSPEC:             0
#TCA_FQ_PLIMIT:             1
#TCA_FQ_FLOW_PLIMIT:        2
#TCA_FQ_QUANTUM:            3
#TCA_FQ_INITIAL_QUANTUM:    4
#TCA_FQ_RATE_ENABLE:        5
#TCA_FQ_FLOW_DEFAULT_RATE:  6
#TCA_FQ_FLOW_MAX_RATE:      7
#TCA_FQ_BUCKETS_LOG:        8
#TCA_FQ_FLOW_REFILL_DELAY:  9
#TCA_FQ_ORPHAN_MASK:        10
#TCA_FQ_LOW_RATE_THRESHOLD: 11
#TCA_FQ_CE_THRESHOLD:       12
#TCA_FQ_TIMER_SLACK:        13
#TCA_FQ_HORIZON:            14
#TCA_FQ_HORIZON_DROP:       15

#TCA_FQ_CODEL_UNSPEC:          0
#TCA_FQ_CODEL_TARGET:          1
#TCA_FQ_CODEL_LIMIT:           2
#TCA_FQ_CODEL_INTERVAL:        3
#TCA_FQ_CODEL_ECN:             4
#TCA_FQ_CODEL_FLOWS:           5
#TCA_FQ_CODEL_QUANTUM:         6
#TCA_FQ_CODEL_CE_THRESHOLD:    7
#TCA_FQ_CODEL_DROP_BATCH_SIZE: 8
#TCA_FQ_CODEL_MEMORY_LIMIT:    9

#TCA_HFSC_UNSPEC: 0
#TCA_HFSC_RSC:    1
#TCA_HFSC_FSC:    2
#TCA_HFSC_USC:    3

#TCA_FLOWER_UNSPEC:                    0
#TCA_FLOWER_CLASSID:                   1
#TCA_FLOWER_INDEV:                     2
#TCA_FLOWER_ACT:                       3
#TCA_FLOWER_KEY_ETH_DST:               4
#TCA_FLOWER_KEY_ETH_DST_MASK:          5
#TCA_FLOWER_KEY_ETH_SRC:               6
#TCA_FLOWER_KEY_ETH_SRC_MASK:          7
#TCA_FLOWER_KEY_ETH_TYPE:              8
#TCA_FLOWER_KEY_IP_PROTO:              9
#TCA_FLOWER_KEY_IPV4_SRC:              10
#TCA_FLOWER_KEY_IPV4_SRC_MASK:         11
#TCA_FLOWER_KEY_IPV4_DST:              12
#TCA_FLOWER_KEY_IPV4_DST_MASK:         13
#TCA_FLOWER_KEY_IPV6_SRC:              14
#TCA_FLOWER_KEY_IPV6_SRC_MASK:         15
#TCA_FLOWER_KEY_IPV6_DST:              16
#TCA_FLOWER_KEY_IPV6_DST_MASK:         17
#TCA_FLOWER_KEY_TCP_SRC:               18
#TCA_FLOWER_KEY_TCP_DST:               19
#TCA_FLOWER_KEY_UDP_SRC:               20
#TCA_FLOWER_KEY_UDP_DST:               21
#TCA_FLOWER_FLAGS:                     22
#TCA_FLOWER_KEY_VLAN_ID:               23
#TCA_FLOWER_KEY_VLAN_PRIO:             24
#TCA_FLOWER_KEY_VLAN_ETH_TYPE:         25
#TCA_FLOWER_KEY_ENC_KEY_ID:            26
#TCA_FLOWER_KEY_ENC_IPV4_SRC:          27
#TCA_FLOWER_KEY_ENC_IPV4_SRC_MASK:     28
#TCA_FLOWER_KEY_ENC_IPV4_DST:          29
#TCA_FLOWER_KEY_ENC_IPV4_DST_MASK:     30
#TCA_FLOWER_KEY_ENC_IPV6_SRC:          31
#TCA_FLOWER_KEY_ENC_IPV6_SRC_MASK:     32
#TCA_FLOWER_KEY_ENC_IPV6_DST:          33
#TCA_FLOWER_KEY_ENC_IPV6_DST_MASK:     34
#TCA_FLOWER_KEY_TCP_SRC_MASK:          35
#TCA_FLOWER_KEY_TCP_DST_MASK:          36
#TCA_FLOWER_KEY_UDP_SRC_MASK:          37
#TCA_FLOWER_KEY_UDP_DST_MASK:          38
#TCA_FLOWER_KEY_SCTP_SRC_MASK:         39
#TCA_FLOWER_KEY_SCTP_DST_MASK:         40
#TCA_FLOWER_KEY_SCTP_SRC:              41
#TCA_FLOWER_KEY_SCTP_DST:              42
#TCA_FLOWER_KEY_ENC_UDP_SRC_PORT:      43
#TCA_FLOWER_KEY_ENC_UDP_SRC_PORT_MASK: 44
#TCA_FLOWER_KEY_ENC_UDP_DST_PORT:      45
#TCA_FLOWER_KEY_ENC_UDP_DST_PORT_MASK: 46
#TCA_FLOWER_KEY_FLAGS:                 47
#TCA_FLOWER_KEY_FLAGS_MASK:            48
#TCA_FLOWER_KEY_ICMPV4_CODE:           49
#TCA_FLOWER_KEY_ICMPV4_CODE_MASK:      50
#TCA_FLOWER_KEY_ICMPV4_TYPE:           51
#TCA_FLOWER_KEY_ICMPV4_TYPE_MASK:      52
#TCA_FLOWER_KEY_ICMPV6_CODE:           53
#TCA_FLOWER_KEY_ICMPV6_CODE_MASK:      54
#TCA_FLOWER_KEY_ICMPV6_TYPE:           55
#TCA_FLOWER_KEY_ICMPV6_TYPE_MASK:      56
#TCA_FLOWER_KEY_ARP_SIP:               57
#TCA_FLOWER_KEY_ARP_SIP_MASK:          58
#TCA_FLOWER_KEY_ARP_TIP:               59
#TCA_FLOWER_KEY_ARP_TIP_MASK:          60
#TCA_FLOWER_KEY_ARP_OP:                61
#TCA_FLOWER_KEY_ARP_OP_MASK:           62
#TCA_FLOWER_KEY_ARP_SHA:               63
#TCA_FLOWER_KEY_ARP_SHA_MASK:          64
#TCA_FLOWER_KEY_ARP_THA:               65
#TCA_FLOWER_KEY_ARP_THA_MASK:          66
#TCA_FLOWER_KEY_MPLS_TTL:              67
#TCA_FLOWER_KEY_MPLS_BOS:              68
#TCA_FLOWER_KEY_MPLS_TC:               69
#TCA_FLOWER_KEY_MPLS_LABEL:            70
#TCA_FLOWER_KEY_TCP_FLAGS:             71
#TCA_FLOWER_KEY_TCP_FLAGS_MASK:        72
#TCA_FLOWER_KEY_IP_TOS:                73
#TCA_FLOWER_KEY_IP_TOS_MASK:           74
#TCA_FLOWER_KEY_IP_TTL:                75
#TCA_FLOWER_KEY_IP_TTL_MASK:           76
#TCA_FLOWER_KEY_CVLAN_ID:              77
#TCA_FLOWER_KEY_CVLAN_PRIO:            78
#TCA_FLOWER_KEY_CVLAN_ETH_TYPE:        79
#TCA_FLOWER_KEY_ENC_IP_TOS:            80
#TCA_FLOWER_KEY_ENC_IP_TOS_MASK:       81
#TCA_FLOWER_KEY_ENC_IP_TTL:            82
#TCA_FLOWER_KEY_ENC_IP_TTL_MASK:       83
#TCA_FLOWER_KEY_ENC_OPTS:              84
#TCA_FLOWER_KEY_ENC_OPTS_MASK:         85
#TCA_FLOWER_IN_HW_COUNT:               86
#TCA_FLOWER_KEY_PORT_SRC_MIN:          87
#TCA_FLOWER_KEY_PORT_SRC_MAX:          88
#TCA_FLOWER_KEY_PORT_DST_MIN:          89
#TCA_FLOWER_KEY_PORT_DST_MAX:          90
_#__TCA_FLOWER_MAX:                    91

#TCA_CLS_FLAGS_SKIP_HW: 1

#TCA_CLS_FLAGS_SKIP_SW: 2

#TcSfqQopt: {
	Quantum: uint32
	Perturb: int32
	Limit:   uint32
	Divisor: uint32
	Flows:   uint32
}

//	struct tc_sfqred_stats {
//		__u32           prob_drop;      /* Early drops, below max threshold */
//		__u32           forced_drop;	/* Early drops, after max threshold */
//		__u32           prob_mark;      /* Marked packets, below max threshold */
//		__u32           forced_mark;    /* Marked packets, after max threshold */
//		__u32           prob_mark_head; /* Marked packets, below max threshold */
//		__u32           forced_mark_head;/* Marked packets, after max threshold */
//	};
#TcSfqRedStats: {
	ProbDrop:       uint32
	ForcedDrop:     uint32
	ProbMark:       uint32
	ForcedMark:     uint32
	ProbMarkHead:   uint32
	ForcedMarkHead: uint32
}

//	struct tc_sfq_qopt_v1 {
//		struct tc_sfq_qopt v0;
//		unsigned int	depth;		/* max number of packets per flow */
//		unsigned int	headdrop;
//
// /* SFQRED parameters */
//
//	__u32		limit;		/* HARD maximal flow queue length (bytes) */
//	__u32		qth_min;	/* Min average length threshold (bytes) */
//	__u32		qth_max;	/* Max average length threshold (bytes) */
//	unsigned char   Wlog;		/* log(W)		*/
//	unsigned char   Plog;		/* log(P_max/(qth_max-qth_min))	*/
//	unsigned char   Scell_log;	/* cell size for idle damping */
//	unsigned char	flags;
//	__u32		max_P;		/* probability, high resolution */
//
// /* SFQRED stats */
//
//		struct tc_sfqred_stats stats;
//	};
#TcSfqQoptV1: {
	TcSfqQopt:     #TcSfqQopt
	Depth:         uint32
	HeadDrop:      uint32
	Limit:         uint32
	QthMin:        uint32
	QthMax:        uint32
	Wlog:          uint8 @go(,byte)
	Plog:          uint8 @go(,byte)
	ScellLog:      uint8 @go(,byte)
	Flags:         uint8 @go(,byte)
	MaxP:          uint32
	TcSfqRedStats: #TcSfqRedStats
}

// IPProto represents Flower ip_proto attribute
#IPProto: uint8 // #enumIPProto

#enumIPProto:
	#IPPROTO_TCP |
	#IPPROTO_UDP |
	#IPPROTO_SCTP |
	#IPPROTO_ICMP |
	#IPPROTO_ICMPV6

#values_IPProto: {
	IPPROTO_TCP:    #IPPROTO_TCP
	IPPROTO_UDP:    #IPPROTO_UDP
	IPPROTO_SCTP:   #IPPROTO_SCTP
	IPPROTO_ICMP:   #IPPROTO_ICMP
	IPPROTO_ICMPV6: #IPPROTO_ICMPV6
}

#IPPROTO_TCP:    #IPProto & 6
#IPPROTO_UDP:    #IPProto & 17
#IPPROTO_SCTP:   #IPProto & 132
#IPPROTO_ICMP:   #IPProto & 1
#IPPROTO_ICMPV6: #IPProto & 58

#MaxOffs:                128
#SizeOfPeditSel:         24
#SizeOfPeditKey:         24
#TCA_PEDIT_KEY_EX_HTYPE: 1
#TCA_PEDIT_KEY_EX_CMD:   2

#TCA_PEDIT_UNSPEC:   0
#TCA_PEDIT_TM:       1
#TCA_PEDIT_PARMS:    2
#TCA_PEDIT_PAD:      3
#TCA_PEDIT_PARMS_EX: 4
#TCA_PEDIT_KEYS_EX:  5
#TCA_PEDIT_KEY_EX:   6

// /* TCA_PEDIT_KEY_EX_HDR_TYPE_NETWROK is a special case for legacy users. It
//   - means no specific header type - offset is relative to the network layer
//     */
#PeditHeaderType: uint16

#TCA_PEDIT_KEY_EX_HDR_TYPE_NETWORK: 0
#TCA_PEDIT_KEY_EX_HDR_TYPE_ETH:     1
#TCA_PEDIT_KEY_EX_HDR_TYPE_IP4:     2
#TCA_PEDIT_KEY_EX_HDR_TYPE_IP6:     3
#TCA_PEDIT_KEY_EX_HDR_TYPE_TCP:     4
#TCA_PEDIT_KEY_EX_HDR_TYPE_UDP:     5
_#__PEDIT_HDR_TYPE_MAX:             6

#PeditCmd: uint16

#TCA_PEDIT_KEY_EX_CMD_SET: 0
#TCA_PEDIT_KEY_EX_CMD_ADD: 1

#TcPeditSel: {
	TcGen: #TcGen
	NKeys: uint8
	Flags: uint8
}

#TcPeditKey: {
	Mask:    uint32
	Val:     uint32
	Off:     uint32
	At:      uint32
	OffMask: uint32
	Shift:   uint32
}

#TcPeditKeyEx: {
	HeaderType: #PeditHeaderType
	Cmd:        #PeditCmd
}

#TcPedit: {
	Sel: #TcPeditSel
	Keys: [...#TcPeditKey] @go(,[]TcPeditKey)
	KeysEx: [...#TcPeditKeyEx] @go(,[]TcPeditKeyEx)
	Extend: uint8
}
