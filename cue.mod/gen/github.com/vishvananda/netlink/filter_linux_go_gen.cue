// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/vishvananda/netlink

package netlink

import "github.com/vishvananda/netlink/nl"

#TC_U32_TERMINAL:  1
#TC_U32_OFFSET:    2
#TC_U32_VAROFFSET: 4
#TC_U32_EAT:       8

// Sel of the U32 filters that contains multiple TcU32Key. This is the type
// alias and the frontend representation of nl.TcU32Sel. It is serialized into
// canonical nl.TcU32Sel with the appropriate endianness.
#TcU32Sel: nl.#TcU32Sel

// TcU32Key contained of Sel in the U32 filters. This is the type alias and the
// frontend representation of nl.TcU32Key. It is serialized into chanonical
// nl.TcU32Sel with the appropriate endianness.
#TcU32Key: nl.#TcU32Key

// U32 filters on many packet related properties
#U32: {
	FilterAttrs: #FilterAttrs
	ClassId:     uint32
	Divisor:     uint32
	Hash:        uint32
	Link:        uint32
	RedirIndex:  int
	Sel?:        null | nl.#TcU32Sel @go(,*TcU32Sel)
	Actions: [...#Action] @go(,[]Action)
	Police?: null | #PoliceAction @go(,*PoliceAction)
}

#Flower: {
	FilterAttrs:     #FilterAttrs
	ClassId:         uint32
	DestIP:          string @go(,net.IP)
	DestIPMask:      _      @go(,net.IPMask)
	SrcIP:           string @go(,net.IP)
	SrcIPMask:       _      @go(,net.IPMask)
	EthType:         uint16
	EncDestIP:       string @go(,net.IP)
	EncDestIPMask:   _      @go(,net.IPMask)
	EncSrcIP:        string @go(,net.IP)
	EncSrcIPMask:    _      @go(,net.IPMask)
	EncDestPort:     uint16
	EncKeyId:        uint32
	SrcMac:          _ @go(,net.HardwareAddr)
	DestMac:         _ @go(,net.HardwareAddr)
	VlanId:          uint16
	SkipHw:          bool
	SkipSw:          bool
	IPProto?:        null | nl.#IPProto @go(,*nl.IPProto)
	DestPort:        uint16
	SrcPort:         uint16
	SrcPortRangeMin: uint16
	SrcPortRangeMax: uint16
	DstPortRangeMin: uint16
	DstPortRangeMax: uint16
	Actions: [...#Action] @go(,[]Action)
}
