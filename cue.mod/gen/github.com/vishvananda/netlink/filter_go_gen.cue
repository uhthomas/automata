// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/vishvananda/netlink

package netlink

#Filter: _

// FilterAttrs represents a netlink filter. A filter is associated with a link,
// has a handle and a parent. The root filter of a device should have a
// parent == HANDLE_ROOT.
#FilterAttrs: {
	LinkIndex: int
	Handle:    uint32
	Parent:    uint32
	Priority:  uint16
	Protocol:  uint16
	Chain?:    null | uint32 @go(,*uint32)
}

#TcAct: int32 // #enumTcAct

#enumTcAct:
	#TC_ACT_UNSPEC |
	#TC_ACT_OK |
	#TC_ACT_RECLASSIFY |
	#TC_ACT_SHOT |
	#TC_ACT_PIPE |
	#TC_ACT_STOLEN |
	#TC_ACT_QUEUED |
	#TC_ACT_REPEAT |
	#TC_ACT_REDIRECT |
	#TC_ACT_JUMP

#values_TcAct: {
	TC_ACT_UNSPEC:     #TC_ACT_UNSPEC
	TC_ACT_OK:         #TC_ACT_OK
	TC_ACT_RECLASSIFY: #TC_ACT_RECLASSIFY
	TC_ACT_SHOT:       #TC_ACT_SHOT
	TC_ACT_PIPE:       #TC_ACT_PIPE
	TC_ACT_STOLEN:     #TC_ACT_STOLEN
	TC_ACT_QUEUED:     #TC_ACT_QUEUED
	TC_ACT_REPEAT:     #TC_ACT_REPEAT
	TC_ACT_REDIRECT:   #TC_ACT_REDIRECT
	TC_ACT_JUMP:       #TC_ACT_JUMP
}

#TC_ACT_EXT_SHIFT:    28
#TC_ACT_EXT_VAL_MASK: 268435455

#TC_ACT_UNSPEC:     #TcAct & -1
#TC_ACT_OK:         #TcAct & 0
#TC_ACT_RECLASSIFY: #TcAct & 1
#TC_ACT_SHOT:       #TcAct & 2
#TC_ACT_PIPE:       #TcAct & 3
#TC_ACT_STOLEN:     #TcAct & 4
#TC_ACT_QUEUED:     #TcAct & 5
#TC_ACT_REPEAT:     #TcAct & 6
#TC_ACT_REDIRECT:   #TcAct & 7
#TC_ACT_JUMP:       #TcAct & 0x10000000

#TcPolAct: int32 // #enumTcPolAct

#enumTcPolAct:
	#TC_POLICE_UNSPEC |
	#TC_POLICE_OK |
	#TC_POLICE_RECLASSIFY |
	#TC_POLICE_SHOT |
	#TC_POLICE_PIPE

#values_TcPolAct: {
	TC_POLICE_UNSPEC:     #TC_POLICE_UNSPEC
	TC_POLICE_OK:         #TC_POLICE_OK
	TC_POLICE_RECLASSIFY: #TC_POLICE_RECLASSIFY
	TC_POLICE_SHOT:       #TC_POLICE_SHOT
	TC_POLICE_PIPE:       #TC_POLICE_PIPE
}

#TC_POLICE_UNSPEC:     #TcPolAct & -1
#TC_POLICE_OK:         #TcPolAct & 0
#TC_POLICE_RECLASSIFY: #TcPolAct & 1
#TC_POLICE_SHOT:       #TcPolAct & 2
#TC_POLICE_PIPE:       #TcPolAct & 3

#ActionAttrs: {
	Index:       int
	Capab:       int
	Action:      #TcAct
	Refcnt:      int
	Bindcnt:     int
	Statistics?: null | #ActionStatistic @go(,*ActionStatistic)
	Timestamp?:  null | #ActionTimestamp @go(,*ActionTimestamp)
}

#ActionTimestamp: {
	Installed: uint64
	LastUsed:  uint64
	Expires:   uint64
	FirstUsed: uint64
}

#ActionStatistic: #ClassStatistics

// Action represents an action in any supported filter.
#Action: _

#GenericAction: {
	ActionAttrs: #ActionAttrs
	Chain:       int32
}

#BpfAction: {
	ActionAttrs: #ActionAttrs
	Fd:          int
	Name:        string
}

#ConnmarkAction: {
	ActionAttrs: #ActionAttrs
	Zone:        uint16
}

#CsumUpdateFlags: uint32 // #enumCsumUpdateFlags

#enumCsumUpdateFlags:
	#TCA_CSUM_UPDATE_FLAG_IPV4HDR |
	#TCA_CSUM_UPDATE_FLAG_ICMP |
	#TCA_CSUM_UPDATE_FLAG_IGMP |
	#TCA_CSUM_UPDATE_FLAG_TCP |
	#TCA_CSUM_UPDATE_FLAG_UDP |
	#TCA_CSUM_UPDATE_FLAG_UDPLITE |
	#TCA_CSUM_UPDATE_FLAG_SCTP

#values_CsumUpdateFlags: {
	TCA_CSUM_UPDATE_FLAG_IPV4HDR: #TCA_CSUM_UPDATE_FLAG_IPV4HDR
	TCA_CSUM_UPDATE_FLAG_ICMP:    #TCA_CSUM_UPDATE_FLAG_ICMP
	TCA_CSUM_UPDATE_FLAG_IGMP:    #TCA_CSUM_UPDATE_FLAG_IGMP
	TCA_CSUM_UPDATE_FLAG_TCP:     #TCA_CSUM_UPDATE_FLAG_TCP
	TCA_CSUM_UPDATE_FLAG_UDP:     #TCA_CSUM_UPDATE_FLAG_UDP
	TCA_CSUM_UPDATE_FLAG_UDPLITE: #TCA_CSUM_UPDATE_FLAG_UDPLITE
	TCA_CSUM_UPDATE_FLAG_SCTP:    #TCA_CSUM_UPDATE_FLAG_SCTP
}

#TCA_CSUM_UPDATE_FLAG_IPV4HDR: #CsumUpdateFlags & 1
#TCA_CSUM_UPDATE_FLAG_ICMP:    #CsumUpdateFlags & 2
#TCA_CSUM_UPDATE_FLAG_IGMP:    #CsumUpdateFlags & 4
#TCA_CSUM_UPDATE_FLAG_TCP:     #CsumUpdateFlags & 8
#TCA_CSUM_UPDATE_FLAG_UDP:     #CsumUpdateFlags & 16
#TCA_CSUM_UPDATE_FLAG_UDPLITE: #CsumUpdateFlags & 32
#TCA_CSUM_UPDATE_FLAG_SCTP:    #CsumUpdateFlags & 64

#CsumAction: {
	ActionAttrs: #ActionAttrs
	UpdateFlags: #CsumUpdateFlags
}

#VlanAct: int8 // #enumVlanAct

#enumVlanAct:
	#TCA_VLAN_ACT_POP |
	#TCA_VLAN_ACT_PUSH

#values_VlanAct: {
	TCA_VLAN_ACT_POP:  #TCA_VLAN_ACT_POP
	TCA_VLAN_ACT_PUSH: #TCA_VLAN_ACT_PUSH
}

#VlanAction: {
	ActionAttrs: #ActionAttrs
	Action:      #VlanAct
	VlanID:      uint16
}

#TCA_VLAN_ACT_POP:  #VlanAct & 1
#TCA_VLAN_ACT_PUSH: #VlanAct & 2

#MirredAct: uint8 // #enumMirredAct

#enumMirredAct:
	#TCA_EGRESS_REDIR |
	#TCA_EGRESS_MIRROR |
	#TCA_INGRESS_REDIR |
	#TCA_INGRESS_MIRROR

#values_MirredAct: {
	TCA_EGRESS_REDIR:   #TCA_EGRESS_REDIR
	TCA_EGRESS_MIRROR:  #TCA_EGRESS_MIRROR
	TCA_INGRESS_REDIR:  #TCA_INGRESS_REDIR
	TCA_INGRESS_MIRROR: #TCA_INGRESS_MIRROR
}

#TCA_EGRESS_REDIR:   #MirredAct & 1
#TCA_EGRESS_MIRROR:  #MirredAct & 2
#TCA_INGRESS_REDIR:  #MirredAct & 3
#TCA_INGRESS_MIRROR: #MirredAct & 4

#MirredAction: {
	ActionAttrs:  #ActionAttrs
	MirredAction: #MirredAct
	Ifindex:      int
}

#TunnelKeyAct: int8 // #enumTunnelKeyAct

#enumTunnelKeyAct:
	#TCA_TUNNEL_KEY_SET |
	#TCA_TUNNEL_KEY_UNSET

#values_TunnelKeyAct: {
	TCA_TUNNEL_KEY_SET:   #TCA_TUNNEL_KEY_SET
	TCA_TUNNEL_KEY_UNSET: #TCA_TUNNEL_KEY_UNSET
}

#TCA_TUNNEL_KEY_SET:   #TunnelKeyAct & 1
#TCA_TUNNEL_KEY_UNSET: #TunnelKeyAct & 2

#TunnelKeyAction: {
	ActionAttrs: #ActionAttrs
	Action:      #TunnelKeyAct
	SrcAddr:     string @go(,net.IP)
	DstAddr:     string @go(,net.IP)
	KeyID:       uint32
	DestPort:    uint16
}

#SkbEditAction: {
	ActionAttrs:   #ActionAttrs
	QueueMapping?: null | uint16 @go(,*uint16)
	PType?:        null | uint16 @go(,*uint16)
	Priority?:     null | uint32 @go(,*uint32)
	Mark?:         null | uint32 @go(,*uint32)
	Mask?:         null | uint32 @go(,*uint32)
}

#PoliceAction: {
	ActionAttrs:     #ActionAttrs
	Rate:            uint32
	Burst:           uint32
	RCellLog:        int
	Mtu:             uint32
	Mpu:             uint16
	PeakRate:        uint32
	PCellLog:        int
	AvRate:          uint32
	Overhead:        uint16
	LinkLayer:       int
	ExceedAction:    #TcPolAct
	NotExceedAction: #TcPolAct
}

#SampleAction: {
	ActionAttrs: #ActionAttrs
	Group:       uint32
	Rate:        uint32
	TruncSize:   uint32
}

// MatchAll filters match all packets
#MatchAll: {
	FilterAttrs: #FilterAttrs
	ClassId:     uint32
	Actions: [...#Action] @go(,[]Action)
}

#FwFilter: {
	FilterAttrs: #FilterAttrs
	ClassId:     uint32
	InDev:       string
	Mask:        uint32
	Police?:     null | #PoliceAction @go(,*PoliceAction)
	Actions: [...#Action] @go(,[]Action)
}

#BpfFilter: {
	FilterAttrs:  #FilterAttrs
	ClassId:      uint32
	Fd:           int
	Name:         string
	DirectAction: bool
	Id:           int
	Tag:          string
}

// GenericFilter filters represent types that are not currently understood
// by this netlink library.
#GenericFilter: {
	FilterAttrs: #FilterAttrs
	FilterType:  string
}

#PeditAction: {
	ActionAttrs: #ActionAttrs
	Proto:       uint8
	SrcMacAddr:  _      @go(,net.HardwareAddr)
	DstMacAddr:  _      @go(,net.HardwareAddr)
	SrcIP:       string @go(,net.IP)
	DstIP:       string @go(,net.IP)
	SrcPort:     uint16
	DstPort:     uint16
}
