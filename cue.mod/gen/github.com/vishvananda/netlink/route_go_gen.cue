// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/vishvananda/netlink

package netlink

// Scope is an enum representing a route scope.
#Scope: uint8 // #enumScope

#enumScope:
	#SCOPE_UNIVERSE |
	#SCOPE_SITE |
	#SCOPE_LINK |
	#SCOPE_HOST |
	#SCOPE_NOWHERE

#values_Scope: {
	SCOPE_UNIVERSE: #SCOPE_UNIVERSE
	SCOPE_SITE:     #SCOPE_SITE
	SCOPE_LINK:     #SCOPE_LINK
	SCOPE_HOST:     #SCOPE_HOST
	SCOPE_NOWHERE:  #SCOPE_NOWHERE
}

#NextHopFlag: int // #enumNextHopFlag

#enumNextHopFlag:
	#FLAG_ONLINK |
	#FLAG_PERVASIVE

#values_NextHopFlag: {
	FLAG_ONLINK:    #FLAG_ONLINK
	FLAG_PERVASIVE: #FLAG_PERVASIVE
}

#RT_FILTER_PROTOCOL: uint64 & 2
#RT_FILTER_SCOPE:    uint64 & 4
#RT_FILTER_TYPE:     uint64 & 8
#RT_FILTER_TOS:      uint64 & 16
#RT_FILTER_IIF:      uint64 & 32
#RT_FILTER_OIF:      uint64 & 64
#RT_FILTER_DST:      uint64 & 128
#RT_FILTER_SRC:      uint64 & 256
#RT_FILTER_GW:       uint64 & 512
#RT_FILTER_TABLE:    uint64 & 1024
#RT_FILTER_HOPLIMIT: uint64 & 2048
#RT_FILTER_PRIORITY: uint64 & 4096
#RT_FILTER_MARK:     uint64 & 8192
#RT_FILTER_MASK:     uint64 & 16384
#RT_FILTER_REALM:    uint64 & 32768

#Destination: _

#Encap: _

// Protocol describe what was the originator of the route
#RouteProtocol: int

// Route represents a netlink route.
#Route: {
	LinkIndex:  int
	ILinkIndex: int
	Scope:      #Scope
	Dst?:       null | _ @go(,*net.IPNet)
	Src:        string   @go(,net.IP)
	Gw:         string   @go(,net.IP)
	MultiPath: [...null | #NexthopInfo] @go(,[]*NexthopInfo)
	Protocol:         #RouteProtocol
	Priority:         int
	Family:           int
	Table:            int
	Type:             int
	Tos:              int
	Flags:            int
	MPLSDst?:         null | int @go(,*int)
	NewDst:           #Destination
	Encap:            #Encap
	Via:              #Destination
	Realm:            int
	MTU:              int
	MTULock:          bool
	Window:           int
	Rtt:              int
	RttVar:           int
	Ssthresh:         int
	Cwnd:             int
	AdvMSS:           int
	Reordering:       int
	Hoplimit:         int
	InitCwnd:         int
	Features:         int
	RtoMin:           int
	RtoMinLock:       bool
	InitRwnd:         int
	QuickACK:         int
	Congctl:          string
	FastOpenNoCookie: int
}

// NlFlags is only non-zero for RTM_NEWROUTE, the following flags can be set:
//   - unix.NLM_F_REPLACE - Replace existing matching config object with this request
//   - unix.NLM_F_EXCL - Don't replace the config object if it already exists
//   - unix.NLM_F_CREATE - Create config object if it doesn't already exist
//   - unix.NLM_F_APPEND - Add to the end of the object list
#RouteUpdate: {
	Type:    uint16
	NlFlags: uint16
	Route:   #Route
}

#NexthopInfo: {
	LinkIndex: int
	Hops:      int
	Gw:        string @go(,net.IP)
	Flags:     int
	NewDst:    #Destination
	Encap:     #Encap
	Via:       #Destination
}

_#nexthopInfoSlice: [...null | #NexthopInfo]
