// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/vishvananda/netlink

package netlink

import (
	"github.com/vishvananda/netlink/nl"
	"golang.org/x/sys/unix"
	"github.com/vishvananda/netns"
)

#SizeofLinkStats32: 0x5c
#SizeofLinkStats64: 0xb8

#TUNTAP_MODE_TUN:             #TuntapMode & 1
#TUNTAP_MODE_TAP:             #TuntapMode & 2
#TUNTAP_DEFAULTS:             #TuntapFlag & 40960
#TUNTAP_VNET_HDR:             #TuntapFlag & 16384
#TUNTAP_TUN_EXCL:             #TuntapFlag & 32768
#TUNTAP_NO_PI:                #TuntapFlag & 4096
#TUNTAP_ONE_QUEUE:            #TuntapFlag & 8192
#TUNTAP_MULTI_QUEUE:          #TuntapFlag & 256
#TUNTAP_MULTI_QUEUE_DEFAULTS: #TuntapFlag & 4352

#VF_LINK_STATE_AUTO:    uint32 & 0
#VF_LINK_STATE_ENABLE:  uint32 & 1
#VF_LINK_STATE_DISABLE: uint32 & 2

_#vxlanPortRange: {
	Lo: uint16
	Hi: uint16
}

// LinkUpdate is used to pass information back from LinkSubscribe()
#LinkUpdate: {
	IfInfomsg: nl.#IfInfomsg
	Header:    unix.#NlMsghdr
	Link:      #Link
}

// LinkSubscribeOptions contains a set of options to use with
// LinkSubscribeWithOptions.
#LinkSubscribeOptions: {
	Namespace?:             null | netns.#NsHandle @go(,*netns.NsHandle)
	ListExisting:           bool
	ReceiveBufferSize:      int
	ReceiveBufferForceSize: bool
	ReceiveTimeout?:        null | unix.#Timeval @go(,*unix.Timeval)
}

_#genevePortRange: {
	Lo: uint16
	Hi: uint16
}

_#vethEthtoolStats: {
	Cmd:    uint32
	NStats: uint32
	Peer:   uint64
}
