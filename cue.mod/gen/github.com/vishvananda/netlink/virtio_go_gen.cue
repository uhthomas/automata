// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/vishvananda/netlink

package netlink

#VIRTIO_NET_F_CSUM:                0
#VIRTIO_NET_F_GUEST_CSUM:          1
#VIRTIO_NET_F_CTRL_GUEST_OFFLOADS: 2
#VIRTIO_NET_F_MTU:                 3
#VIRTIO_NET_F_MAC:                 5
#VIRTIO_NET_F_GUEST_TSO4:          7
#VIRTIO_NET_F_GUEST_TSO6:          8
#VIRTIO_NET_F_GUEST_ECN:           9
#VIRTIO_NET_F_GUEST_UFO:           10
#VIRTIO_NET_F_HOST_TSO4:           11
#VIRTIO_NET_F_HOST_TSO6:           12
#VIRTIO_NET_F_HOST_ECN:            13
#VIRTIO_NET_F_HOST_UFO:            14
#VIRTIO_NET_F_MRG_RXBUF:           15
#VIRTIO_NET_F_STATUS:              16
#VIRTIO_NET_F_CTRL_VQ:             17
#VIRTIO_NET_F_CTRL_RX:             18
#VIRTIO_NET_F_CTRL_VLAN:           19
#VIRTIO_NET_F_CTRL_RX_EXTRA:       20
#VIRTIO_NET_F_GUEST_ANNOUNCE:      21
#VIRTIO_NET_F_MQ:                  22
#VIRTIO_NET_F_CTRL_MAC_ADDR:       23
#VIRTIO_NET_F_VQ_NOTF_COAL:        52
#VIRTIO_NET_F_NOTF_COAL:           53
#VIRTIO_NET_F_GUEST_USO4:          54
#VIRTIO_NET_F_GUEST_USO6:          55
#VIRTIO_NET_F_HOST_USO:            56
#VIRTIO_NET_F_HASH_REPORT:         57
#VIRTIO_NET_F_GUEST_HDRLEN:        59
#VIRTIO_NET_F_RSS:                 60
#VIRTIO_NET_F_RSC_EXT:             61
#VIRTIO_NET_F_STANDBY:             62
#VIRTIO_NET_F_SPEED_DUPLEX:        63
#VIRTIO_NET_F_GSO:                 6

#VIRTIO_NET_S_LINK_UP:  1
#VIRTIO_NET_S_ANNOUNCE: 2

// Do we get callbacks when the ring is completely used, even if we've
// suppressed them?
#VIRTIO_F_NOTIFY_ON_EMPTY: 24

// Can the device handle any descriptor layout?
#VIRTIO_F_ANY_LAYOUT: 27

// v1.0 compliant
#VIRTIO_F_VERSION_1: 32

// If clear - device has the platform DMA (e.g. IOMMU) bypass quirk feature.
// If set - use platform DMA tools to access the memory.
// Note the reverse polarity (compared to most other features),
// this is for compatibility with legacy systems.
#VIRTIO_F_ACCESS_PLATFORM: 33

// Legacy name for VIRTIO_F_ACCESS_PLATFORM (for compatibility with old userspace)
#VIRTIO_F_IOMMU_PLATFORM: 33

// This feature indicates support for the packed virtqueue layout.
#VIRTIO_F_RING_PACKED: 34

// Inorder feature indicates that all buffers are used by the device
// in the same order in which they have been made available.
#VIRTIO_F_IN_ORDER: 35

// This feature indicates that memory accesses by the driver and the
// device are ordered in a way described by the platform.
#VIRTIO_F_ORDER_PLATFORM: 36

// Does the device support Single Root I/O Virtualization?
#VIRTIO_F_SR_IOV: 37

// This feature indicates that the driver passes extra data (besides
// identifying the virtqueue) in its device notifications.
#VIRTIO_F_NOTIFICATION_DATA: 38

// This feature indicates that the driver uses the data provided by the device
// as a virtqueue identifier in available buffer notifications.
#VIRTIO_F_NOTIF_CONFIG_DATA: 39

// This feature indicates that the driver can reset a queue individually.
#VIRTIO_F_RING_RESET: 40

#VIRTIO_ID_NET:            1
#VIRTIO_ID_BLOCK:          2
#VIRTIO_ID_CONSOLE:        3
#VIRTIO_ID_RNG:            4
#VIRTIO_ID_BALLOON:        5
#VIRTIO_ID_IOMEM:          6
#VIRTIO_ID_RPMSG:          7
#VIRTIO_ID_SCSI:           8
#VIRTIO_ID_9P:             9
#VIRTIO_ID_MAC80211_WLAN:  10
#VIRTIO_ID_RPROC_SERIAL:   11
#VIRTIO_ID_CAIF:           12
#VIRTIO_ID_MEMORY_BALLOON: 13
#VIRTIO_ID_GPU:            16
#VIRTIO_ID_CLOCK:          17
#VIRTIO_ID_INPUT:          18
#VIRTIO_ID_VSOCK:          19
#VIRTIO_ID_CRYPTO:         20
#VIRTIO_ID_SIGNAL_DIST:    21
#VIRTIO_ID_PSTORE:         22
#VIRTIO_ID_IOMMU:          23
#VIRTIO_ID_MEM:            24
#VIRTIO_ID_SOUND:          25
#VIRTIO_ID_FS:             26
#VIRTIO_ID_PMEM:           27
#VIRTIO_ID_RPMB:           28
#VIRTIO_ID_MAC80211_HWSIM: 29
#VIRTIO_ID_VIDEO_ENCODER:  30
#VIRTIO_ID_VIDEO_DECODER:  31
#VIRTIO_ID_SCMI:           32
#VIRTIO_ID_NITRO_SEC_MOD:  33
#VIRTIO_ID_I2C_ADAPTER:    34
#VIRTIO_ID_WATCHDOG:       35
#VIRTIO_ID_CAN:            36
#VIRTIO_ID_DMABUF:         37
#VIRTIO_ID_PARAM_SERV:     38
#VIRTIO_ID_AUDIO_POLICY:   39
#VIRTIO_ID_BT:             40
#VIRTIO_ID_GPIO:           41

// Virtio Transitional IDs
#VIRTIO_TRANS_ID_NET:     0x1000
#VIRTIO_TRANS_ID_BLOCK:   0x1001
#VIRTIO_TRANS_ID_BALLOON: 0x1002
#VIRTIO_TRANS_ID_CONSOLE: 0x1003
#VIRTIO_TRANS_ID_SCSI:    0x1004
#VIRTIO_TRANS_ID_RNG:     0x1005
#VIRTIO_TRANS_ID_9P:      0x1009
