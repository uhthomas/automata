// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/envoyproxy/gateway/api/v1alpha1

package v1alpha1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// FaultInjection defines the fault injection policy to be applied. This configuration can be used to
// inject delays and abort requests to mimic failure scenarios such as service failures and overloads
// +union
//
// +kubebuilder:validation:XValidation:rule=" has(self.delay) || has(self.abort) ",message="Delay and abort faults are set at least one."
#FaultInjection: {
	// If specified, a delay will be injected into the request.
	//
	// +optional
	delay?: null | #FaultInjectionDelay @go(Delay,*FaultInjectionDelay)

	// If specified, the request will be aborted if it meets the configuration criteria.
	//
	// +optional
	abort?: null | #FaultInjectionAbort @go(Abort,*FaultInjectionAbort)
}

// FaultInjectionDelay defines the delay fault injection configuration
#FaultInjectionDelay: {
	// FixedDelay specifies the fixed delay duration
	//
	// +required
	fixedDelay?: null | metav1.#Duration @go(FixedDelay,*metav1.Duration)

	// Percentage specifies the percentage of requests to be delayed. Default 100%, if set 0, no requests will be delayed. Accuracy to 0.0001%.
	// +optional
	// +kubebuilder:default=100
	percentage?: null | float32 @go(Percentage,*float32)
}

// FaultInjectionAbort defines the abort fault injection configuration
// +union
//
// +kubebuilder:validation:XValidation:rule=" !(has(self.httpStatus) && has(self.grpcStatus)) ",message="httpStatus and grpcStatus cannot be simultaneously defined."
// +kubebuilder:validation:XValidation:rule=" has(self.httpStatus) || has(self.grpcStatus) ",message="httpStatus and grpcStatus are set at least one."
#FaultInjectionAbort: {
	// StatusCode specifies the HTTP status code to be returned
	//
	// +optional
	// +kubebuilder:validation:Minimum=200
	// +kubebuilder:validation:Maximum=600
	httpStatus?: null | int32 @go(HTTPStatus,*int32)

	// GrpcStatus specifies the GRPC status code to be returned
	//
	// +optional
	grpcStatus?: null | int32 @go(GrpcStatus,*int32)

	// Percentage specifies the percentage of requests to be aborted. Default 100%, if set 0, no requests will be aborted. Accuracy to 0.0001%.
	// +optional
	// +kubebuilder:default=100
	percentage?: null | float32 @go(Percentage,*float32)
}
