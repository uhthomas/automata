// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/prometheus/client_golang/prometheus

package prometheus

import "time"

// A Metric models a single sample value with its meta data being exported to
// Prometheus. Implementations of Metric in this package are Gauge, Counter,
// Histogram, Summary, and Untyped.
#Metric: _

// Opts bundles the options for creating most Metric types. Each metric
// implementation XXX has its own XXXOpts type, but in most cases, it is just
// an alias of this type (which might change when the requirement arises.)
//
// It is mandatory to set Name to a non-empty string. All other fields are
// optional and can safely be left at their zero value, although it is strongly
// encouraged to set a Help string.
#Opts: {
	// Namespace, Subsystem, and Name are components of the fully-qualified
	// name of the Metric (created by joining these components with
	// "_"). Only Name is mandatory, the others merely help structuring the
	// name. Note that the fully-qualified name of the metric must be a
	// valid Prometheus metric name.
	Namespace: string
	Subsystem: string
	Name:      string

	// Help provides information about this metric.
	//
	// Metrics with the same fully-qualified name must have the same Help
	// string.
	Help: string

	// ConstLabels are used to attach fixed labels to this metric. Metrics
	// with the same fully-qualified name must have the same label names in
	// their ConstLabels.
	//
	// ConstLabels are only used rarely. In particular, do not use them to
	// attach the same labels to all your metrics. Those use cases are
	// better covered by target labels set by the scraping Prometheus
	// server, or by one specific metric (e.g. a build_info or a
	// machine_role metric). See also
	// https://prometheus.io/docs/instrumenting/writing_exporters/#target-labels-not-static-scraped-labels
	ConstLabels: #Labels
}

_#timestampedMetric: Metric: #Metric

_#withExemplarsMetric: Metric: #Metric

// Exemplar is easier to use, user-facing representation of *dto.Exemplar.
#Exemplar: {
	Value:  float64
	Labels: #Labels

	// Optional.
	// Default value (time.Time{}) indicates its empty, which should be
	// understood as time.Now() time at the moment of creation of metric.
	Timestamp: time.Time
}
