// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cloudnative-pg/cloudnative-pg/api/v1

package v1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// ImageCatalogSpec defines the desired ImageCatalog
#ImageCatalogSpec: {
	// List of CatalogImages available in the catalog
	// +kubebuilder:validation:MinItems=1
	// +kubebuilder:validation:MaxItems=8
	// +kubebuilder:validation:XValidation:rule="self.all(e, self.filter(f, f.major==e.major).size() == 1)",message=Images must have unique major versions
	images: [...#CatalogImage] @go(Images,[]CatalogImage)
}

// CatalogImage defines the image and major version
#CatalogImage: {
	// The image reference
	image: string @go(Image)

	// +kubebuilder:validation:Minimum=10
	// The PostgreSQL major version of the image. Must be unique within the catalog.
	major: int @go(Major)
}

// ImageCatalog is the Schema for the imagecatalogs API
#ImageCatalog: {
	metav1.#TypeMeta
	metadata: metav1.#ObjectMeta @go(ObjectMeta)

	// Specification of the desired behavior of the ImageCatalog.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	spec: #ImageCatalogSpec @go(Spec)
}

// ImageCatalogList contains a list of ImageCatalog
#ImageCatalogList: {
	metav1.#TypeMeta

	// Standard list metadata.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	metadata: metav1.#ListMeta @go(ListMeta)

	// List of ImageCatalogs
	items: [...#ImageCatalog] @go(Items,[]ImageCatalog)
}
