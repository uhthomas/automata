// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/containernetworking/cni/pkg/types

package types

// like net.IPNet but adds JSON marshalling and unmarshalling
#IPNet: _

// Use PluginConf instead of NetConf, the NetConf
// backwards-compat alias will be removed in a future release.
#NetConf: _

// PluginConf describes a plugin configuration for a specific network.
#PluginConf: _

// GCAttachment is the parameters to a GC call -- namely,
// the container ID and ifname pair that represents a
// still-valid attachment.
#GCAttachment: {
	containerID: string @go(ContainerID)
	ifname:      string @go(IfName)
}

#IPAM: {
	type?: string @go(Type)
}

// NetConfList describes an ordered list of networks.
#NetConfList: {
	cniVersion?:   string @go(CNIVersion)
	name?:         string @go(Name)
	disableCheck?: bool   @go(DisableCheck)
	disableGC?:    bool   @go(DisableGC)
	plugins?: [...null | #PluginConf] @go(Plugins,[]*PluginConf)
}

// Result is an interface that provides the result of plugin execution
#Result: _

// DNS contains values interesting for DNS resolvers
#DNS: {
	nameservers?: [...string] @go(Nameservers,[]string)
	domain?: string @go(Domain)
	search?: [...string] @go(Search,[]string)
	options?: [...string] @go(Options,[]string)
}

#Route: _

#ErrUnknown:                     uint & 0
#ErrIncompatibleCNIVersion:      uint & 1
#ErrUnsupportedField:            uint & 2
#ErrUnknownContainer:            uint & 3
#ErrInvalidEnvironmentVariables: uint & 4
#ErrIOFailure:                   uint & 5
#ErrDecodingFailure:             uint & 6
#ErrInvalidNetworkConfig:        uint & 7
#ErrInvalidNetNS:                uint & 8
#ErrTryAgainLater:               uint & 11
#ErrInternal:                    uint & 999

#Error: {
	code:     uint   @go(Code)
	msg:      string @go(Msg)
	details?: string @go(Details)
}

// JSON (un)marshallable types
_#route: {
	dst:       #IPNet     @go(Dst)
	gw?:       string     @go(GW,net.IP)
	mtu?:      int        @go(MTU)
	advmss?:   int        @go(AdvMSS)
	priority?: int        @go(Priority)
	table?:    null | int @go(Table,*int)
	scope?:    null | int @go(Scope,*int)
}
