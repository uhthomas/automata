// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cilium/cilium/pkg/policy/api

package api

// MismatchAction specifies what to do when there is no header match
// Empty string is the default for making the rule to fail the match.
// Otherwise the rule is still considered as matching, but the mismatches
// are logged in the access log.
#MismatchAction: string // #enumMismatchAction

#enumMismatchAction:
	#MismatchActionLog |
	#MismatchActionAdd |
	#MismatchActionDelete |
	#MismatchActionReplace

#MismatchActionLog:     #MismatchAction & "LOG"
#MismatchActionAdd:     #MismatchAction & "ADD"
#MismatchActionDelete:  #MismatchAction & "DELETE"
#MismatchActionReplace: #MismatchAction & "REPLACE"

// HeaderMatch extends the HeaderValue for matching requirement of a
// named header field against an immediate string or a secret value.
// If none of the optional fields is present, then the
// header value is not matched, only presence of the header is enough.
#HeaderMatch: {
	// Mismatch identifies what to do in case there is no match. The default is
	// to drop the request. Otherwise the overall rule is still considered as
	// matching, but the mismatches are logged in the access log.
	//
	// +kubebuilder:validation:Enum=LOG;ADD;DELETE;REPLACE
	// +kubebuilder:validation:Optional
	mismatch?: #MismatchAction @go(Mismatch)

	// Name identifies the header.
	// +kubebuilder:validation:Required
	// +kubebuilder:validation:MinLength=1
	name: string @go(Name)

	// Secret refers to a secret that contains the value to be matched against.
	// The secret must only contain one entry. If the referred secret does not
	// exist, and there is no "Value" specified, the match will fail.
	//
	// +kubebuilder:validation:Optional
	secret?: null | #Secret @go(Secret,*Secret)

	// Value matches the exact value of the header. Can be specified either
	// alone or together with "Secret"; will be used as the header value if the
	// secret can not be found in the latter case.
	//
	// +kubebuilder:validation:Optional
	value?: string @go(Value)
}

// PortRuleHTTP is a list of HTTP protocol constraints. All fields are
// optional, if all fields are empty or missing, the rule does not have any
// effect.
//
// All fields of this type are extended POSIX regex as defined by IEEE Std
// 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax)
// matched against the path of an incoming request. Currently it can contain
// characters disallowed from the conventional "path" part of a URL as defined
// by RFC 3986.
#PortRuleHTTP: {
	// Path is an extended POSIX regex matched against the path of a
	// request. Currently it can contain characters disallowed from the
	// conventional "path" part of a URL as defined by RFC 3986.
	//
	// If omitted or empty, all paths are all allowed.
	//
	// +kubebuilder:validation:Optional
	path?: string @go(Path)

	// Method is an extended POSIX regex matched against the method of a
	// request, e.g. "GET", "POST", "PUT", "PATCH", "DELETE", ...
	//
	// If omitted or empty, all methods are allowed.
	//
	// +kubebuilder:validation:Optional
	method?: string @go(Method)

	// Host is an extended POSIX regex matched against the host header of a
	// request. Examples:
	//
	// - foo.bar.com will match the host fooXbar.com or foo-bar.com
	// - foo\.bar\.com will only match the host foo.bar.com
	//
	// If omitted or empty, the value of the host header is ignored.
	//
	// +kubebuilder:validation:Format=idn-hostname
	// +kubebuilder:validation:Optional
	host?: string @go(Host)

	// Headers is a list of HTTP headers which must be present in the
	// request. If omitted or empty, requests are allowed regardless of
	// headers present.
	//
	// +kubebuilder:validation:Optional
	headers?: [...string] @go(Headers,[]string)

	// HeaderMatches is a list of HTTP headers which must be
	// present and match against the given values. Mismatch field can be used
	// to specify what to do when there is no match.
	//
	// +kubebuilder:validation:Optional
	headerMatches?: [...null | #HeaderMatch] @go(HeaderMatches,[]*HeaderMatch)
}
