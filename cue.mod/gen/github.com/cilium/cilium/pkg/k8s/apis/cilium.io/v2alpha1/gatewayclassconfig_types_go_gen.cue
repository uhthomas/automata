// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2alpha1

package v2alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	corev1 "github.com/cilium/cilium/pkg/k8s/slim/k8s/api/core/v1"
)

// CiliumGatewayClassConfig is a Kubernetes third-party resource which
// is used to configure Gateways owned by GatewayClass.
#CiliumGatewayClassConfig: {
	metav1.#TypeMeta

	// +deepequal-gen=false
	metadata: metav1.#ObjectMeta @go(ObjectMeta)

	// Spec is a human-readable of a GatewayClass configuration.
	//
	// +kubebuilder:validation:Optional
	spec?: #CiliumGatewayClassConfigSpec @go(Spec)

	// Status is the status of the policy.
	//
	// +deepequal-gen=false
	// +kubebuilder:validation:Optional
	status: #CiliumGatewayClassConfigStatus @go(Status)
}

// CiliumGatewayClassConfigList is a list of
// CiliumGatewayClassConfig objects.
#CiliumGatewayClassConfigList: {
	metav1.#TypeMeta
	metadata: metav1.#ListMeta @go(ListMeta)

	// Items is a list of CiliumGatewayClassConfigs.
	items: [...#CiliumGatewayClassConfig] @go(Items,[]CiliumGatewayClassConfig)
}

#LoadBalancerSourceRangesPolicyType: string // #enumLoadBalancerSourceRangesPolicyType

#enumLoadBalancerSourceRangesPolicyType:
	#LoadBalancerSourceRangesPolicyAllow |
	#LoadBalancerSourceRangesPolicyDeny

// LoadBalancerSourceRangesPolicyAllow allows traffic for the given source ranges.
#LoadBalancerSourceRangesPolicyAllow: #LoadBalancerSourceRangesPolicyType & "Allow"

// LoadBalancerSourceRangesPolicyDeny denies traffic for the given source ranges.
#LoadBalancerSourceRangesPolicyDeny: #LoadBalancerSourceRangesPolicyType & "Deny"

#ServiceConfig: {
	// Sets the Service.Spec.Type in generated Service objects to the given value.
	// Only LoadBalancer and NodePort are supported.
	//
	// +kubebuilder:validation:Enum=LoadBalancer;NodePort
	// +kubebuilder:default="LoadBalancer"
	type?: corev1.#ServiceType @go(Type)

	// Sets the Service.Spec.ExternalTrafficPolicy in generated Service objects to the given value.
	//
	// +optional
	// +kubebuilder:default="Cluster"
	externalTrafficPolicy?: corev1.#ServiceExternalTrafficPolicy @go(ExternalTrafficPolicy)

	// Sets the Service.Spec.LoadBalancerClass in generated Service objects to the given value.
	//
	// +optional
	loadBalancerClass?: null | string @go(LoadBalancerClass,*string)

	// Sets the Service.Spec.IPFamilies in generated Service objects to the given value.
	//
	// +listType=atomic
	// +optional
	ipFamilies?: [...corev1.#IPFamily] @go(IPFamilies,[]corev1.IPFamily)

	// Sets the Service.Spec.IPFamilyPolicy in generated Service objects to the given value.
	//
	// +optional
	ipFamilyPolicy?: null | corev1.#IPFamilyPolicy @go(IPFamilyPolicy,*corev1.IPFamilyPolicy)

	// Sets the Service.Spec.AllocateLoadBalancerNodePorts in generated Service objects to the given value.
	//
	// +optional
	allocateLoadBalancerNodePorts?: null | bool @go(AllocateLoadBalancerNodePorts,*bool)

	// Sets the Service.Spec.LoadBalancerSourceRanges in generated Service objects to the given value.
	//
	// +optional
	// +listType=atomic
	loadBalancerSourceRanges?: [...string] @go(LoadBalancerSourceRanges,[]string)

	// LoadBalancerSourceRangesPolicy defines the policy for the LoadBalancerSourceRanges if the incoming traffic
	// is allowed or denied.
	//
	// +optional
	// +kubebuilder:validation:Enum=Allow;Deny
	// +kubebuilder:default="Allow"
	loadBalancerSourceRangesPolicy?: #LoadBalancerSourceRangesPolicyType @go(LoadBalancerSourceRangesPolicy)

	// Sets the Service.Spec.TrafficDistribution in generated Service objects to the given value.
	//
	// +optional
	trafficDistribution?: null | string @go(TrafficDistribution,*string)
}

// CiliumGatewayClassConfigSpec specifies all the configuration options for a
// Cilium managed GatewayClass.
#CiliumGatewayClassConfigSpec: {
	// Description helps describe a GatewayClass configuration with more details.
	//
	// +kubebuilder:validation:MaxLength=64
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Service specifies the configuration for the generated Service.
	// Note that not all fields from upstream Service.Spec are supported
	//
	// +kubebuilder:validation:Optional
	service?: null | #ServiceConfig @go(Service,*ServiceConfig)
}

// CiliumGatewayClassConfigStatus contains the status of a CiliumGatewayClassConfig.
#CiliumGatewayClassConfigStatus: {
	// Current service state
	// +optional
	// +patchMergeKey=type
	// +patchStrategy=merge
	// +listType=map
	// +listMapKey=type
	conditions?: [...metav1.#Condition] @go(Conditions,[]metav1.Condition)
}
