// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2

package v2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	slimv1 "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1"
)

// BGPAutoDiscoveryMode defines type of mode to discovery bgp peers
//
// Note list of supported auto discovery modes is not exhaustive and can be extended in the future.
//
// +kubebuilder:validation:Enum=DefaultGateway
#BGPAutoDiscoveryMode: string // #enumBGPAutoDiscoveryMode

#enumBGPAutoDiscoveryMode:
	#BGPDefaultGatewayMode

// BGPDefaultGatewayMode when configured, Cilium will discover bgp peers using default gateway
#BGPDefaultGatewayMode: #BGPAutoDiscoveryMode & "DefaultGateway"

// CiliumBGPClusterConfig is the Schema for the CiliumBGPClusterConfig API
#CiliumBGPClusterConfig: {
	metav1.#TypeMeta

	// +deepequal-gen=false
	metadata: metav1.#ObjectMeta @go(ObjectMeta)

	// Spec defines the desired cluster configuration of the BGP control plane.
	spec: #CiliumBGPClusterConfigSpec @go(Spec)

	// Status is a running status of the cluster configuration
	//
	// +kubebuilder:validation:Optional
	status: #CiliumBGPClusterConfigStatus @go(Status)
}

// CiliumBGPClusterConfigList is a list of CiliumBGPClusterConfig objects.
#CiliumBGPClusterConfigList: {
	metav1.#TypeMeta
	metadata: metav1.#ListMeta @go(ListMeta)

	// Items is a list of CiliumBGPClusterConfig.
	items: [...#CiliumBGPClusterConfig] @go(Items,[]CiliumBGPClusterConfig)
}

#CiliumBGPClusterConfigSpec: {
	// NodeSelector selects a group of nodes where this BGP Cluster
	// config applies.
	// If empty / nil this config applies to all nodes.
	//
	// +kubebuilder:validation:Optional
	nodeSelector?: null | slimv1.#LabelSelector @go(NodeSelector,*slimv1.LabelSelector)

	// A list of CiliumBGPInstance(s) which instructs
	// the BGP control plane how to instantiate virtual BGP routers.
	//
	// +kubebuilder:validation:Required
	// +kubebuilder:validation:MinItems=1
	// +kubebuilder:validation:MaxItems=16
	// +listType=map
	// +listMapKey=name
	bgpInstances: [...#CiliumBGPInstance] @go(BGPInstances,[]CiliumBGPInstance)
}

#CiliumBGPInstance: {
	// Name is the name of the BGP instance. It is a unique identifier for the BGP instance
	// within the cluster configuration.
	//
	// +kubebuilder:validation:Required
	// +kubebuilder:validation:MinLength=1
	// +kubebuilder:validation:MaxLength=255
	name: string @go(Name)

	// LocalASN is the ASN of this BGP instance.
	// Supports extended 32bit ASNs.
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:validation:Minimum=1
	// +kubebuilder:validation:Maximum=4294967295
	localASN?: null | int64 @go(LocalASN,*int64)

	// LocalPort is the port on which the BGP daemon listens for incoming connections.
	//
	// If not specified, BGP instance will not listen for incoming connections.
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:validation:Minimum=1
	// +kubebuilder:validation:Maximum=65535
	localPort?: null | int32 @go(LocalPort,*int32)

	// Peers is a list of neighboring BGP peers for this virtual router
	//
	// +kubebuilder:validation:Optional
	// +listType=map
	// +listMapKey=name
	peers?: [...#CiliumBGPPeer] @go(Peers,[]CiliumBGPPeer)
}

#CiliumBGPPeer: {
	// Name is the name of the BGP peer. It is a unique identifier for the peer within the BGP instance.
	//
	// +kubebuilder:validation:Required
	// +kubebuilder:validation:MinLength=1
	// +kubebuilder:validation:MaxLength=255
	name: string @go(Name)

	// PeerAddress is the IP address of the neighbor.
	// Supports IPv4 and IPv6 addresses.
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:validation:Pattern=`((^\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\s*$)|(^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$))`
	peerAddress?: null | string @go(PeerAddress,*string)

	// PeerASN is the ASN of the peer BGP router.
	// Supports extended 32bit ASNs.
	//
	// If peerASN is 0, the BGP OPEN message validation of ASN will be disabled and
	// ASN will be determined based on peer's OPEN message.
	//
	// +kubebuilder:validation:Optional
	// +kubebuilder:validation:Minimum=0
	// +kubebuilder:validation:Maximum=4294967295
	// +kubebuilder:default=0
	peerASN?: null | int64 @go(PeerASN,*int64)

	// AutoDiscovery is the configuration for auto-discovery of the peer address.
	//
	// +kubebuilder:validation:Optional
	autoDiscovery?: null | #BGPAutoDiscovery @go(AutoDiscovery,*BGPAutoDiscovery)

	// PeerConfigRef is a reference to a peer configuration resource.
	// If not specified, the default BGP configuration is used for this peer.
	//
	// +kubebuilder:validation:Optional
	peerConfigRef?: null | #PeerConfigReference @go(PeerConfigRef,*PeerConfigReference)
}

// AutoDiscovery is the configuration for auto-discovery of the peer address.
#BGPAutoDiscovery: {
	// mode is the mode of the auto-discovery.
	//
	// +kubebuilder:validation:Required
	// +kubebuilder:validation:Enum=DefaultGateway
	mode: #BGPAutoDiscoveryMode @go(Mode)

	// defaultGateway is the configuration for auto-discovery of the default gateway.
	//
	// +kubebuilder:validation:Optional
	defaultGateway?: null | #DefaultGateway @go(DefaultGateway,*DefaultGateway)
}

// DefaultGateway is the configuration for auto-discovery of the default gateway.
#DefaultGateway: {
	// addressFamily is the address family of the default gateway.
	//
	// +kubebuilder:validation:Enum=ipv4;ipv6
	addressFamily: string @go(AddressFamily)
}

// PeerConfigReference is a reference to a peer configuration resource.
#PeerConfigReference: {
	// Name is the name of the peer config resource.
	// Name refers to the name of a Kubernetes object (typically a CiliumBGPPeerConfig).
	//
	// +kubebuilder:validation:Required
	name: string @go(Name)
}

#CiliumBGPClusterConfigStatus: {
	// The current conditions of the CiliumBGPClusterConfig
	//
	// +optional
	// +listType=map
	// +listMapKey=type
	// +deepequal-gen=false
	conditions?: [...metav1.#Condition] @go(Conditions,[]metav1.Condition)
}

// Node selector selects nothing
#BGPClusterConfigConditionNoMatchingNode: "cilium.io/NoMatchingNode"

// Referenced peer configs are missing
#BGPClusterConfigConditionMissingPeerConfigs: "cilium.io/MissingPeerConfigs"

// ClusterConfig with conflicting nodeSelector present
#BGPClusterConfigConditionConflictingClusterConfigs: "cilium.io/ConflictingClusterConfig"
