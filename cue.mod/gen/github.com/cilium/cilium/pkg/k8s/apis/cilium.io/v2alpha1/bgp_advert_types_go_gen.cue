// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2alpha1

package v2alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	slimv1 "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1"
)

// BGPAdvertisementType defines type of advertisement.
//
// Note list of supported advertisements is not exhaustive and can be extended in the future.
// Consumer of this API should be able to handle unknown values.
//
// +kubebuilder:validation:Enum=PodCIDR;CiliumPodIPPool;Service
#BGPAdvertisementType: string // #enumBGPAdvertisementType

#enumBGPAdvertisementType:
	#BGPPodCIDRAdvert |
	#BGPCiliumPodIPPoolAdvert |
	#BGPServiceAdvert

// BGPPodCIDRAdvert when configured, Cilium will advertise pod CIDRs to BGP peers.
#BGPPodCIDRAdvert: #BGPAdvertisementType & "PodCIDR"

// BGPCiliumPodIPPoolAdvert when configured, Cilium will advertise prefixes from CiliumPodIPPools to BGP peers.
#BGPCiliumPodIPPoolAdvert: #BGPAdvertisementType & "CiliumPodIPPool"

// BGPServiceAdvert when configured, Cilium will advertise service related routes to BGP peers.
#BGPServiceAdvert: #BGPAdvertisementType & "Service"

// BGPServiceAddressType defines type of service address to be advertised.
//
// Note list of supported service addresses is not exhaustive and can be extended in the future.
// Consumer of this API should be able to handle unknown values.
//
// +kubebuilder:validation:Enum=LoadBalancerIP;ClusterIP;ExternalIP
#BGPServiceAddressType: string // #enumBGPServiceAddressType

#enumBGPServiceAddressType:
	#BGPLoadBalancerIPAddr |
	#BGPClusterIPAddr |
	#BGPExternalIPAddr

// BGPLoadBalancerIPAddr when configured, Cilium will advertise load balancer services IPs to BGP peers.
// The loadBalancerClass for a service must be nil or specify a class supported by Cilium,
// e.g. "io.cilium/bgp-control-plane".
//
// Refer to the following document for additional details regarding load balancer
// classes: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class
#BGPLoadBalancerIPAddr: #BGPServiceAddressType & "LoadBalancerIP"

// BGPClusterIPAddr when configured, Cilium will advertise cluster IP prefix of a service to BGP peers.
// Cluster IP for a service is defined here
// https://kubernetes.io/docs/concepts/services-networking/service/#type-clusterip
#BGPClusterIPAddr: #BGPServiceAddressType & "ClusterIP"

// BGPExternalIPAddr when configured, Cilium will advertise external IP prefix of a service to BGP peers.
// External IP for a service is defined here
// https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
#BGPExternalIPAddr: #BGPServiceAddressType & "ExternalIP"

// CiliumBGPAdvertisement is the Schema for the ciliumbgpadvertisements API
#CiliumBGPAdvertisement: {
	metav1.#TypeMeta

	// +deepequal-gen=false
	metadata: metav1.#ObjectMeta          @go(ObjectMeta)
	spec:     #CiliumBGPAdvertisementSpec @go(Spec)
}

// CiliumBGPAdvertisementList contains a list of CiliumBGPAdvertisement
#CiliumBGPAdvertisementList: {
	metav1.#TypeMeta
	metadata: metav1.#ListMeta @go(ListMeta)

	// Items is a list of CiliumBGPAdvertisement.
	items: [...#CiliumBGPAdvertisement] @go(Items,[]CiliumBGPAdvertisement)
}

#CiliumBGPAdvertisementSpec: {
	// Advertisements is a list of BGP advertisements.
	//
	// +kubebuilder:validation:Required
	advertisements: [...#BGPAdvertisement] @go(Advertisements,[]BGPAdvertisement)
}

// BGPAdvertisement defines which routes Cilium should advertise to BGP peers. Optionally, additional attributes can be
// set to the advertised routes.
//
// +kubebuilder:validation:XValidation:rule="self.advertisementType != 'Service' || has(self.service)", message="service field is required for the 'Service' advertisementType"
// +kubebuilder:validation:XValidation:rule="self.advertisementType != 'PodCIDR' || !has(self.selector)", message="selector field is not allowed for the 'PodCIDR' advertisementType"
#BGPAdvertisement: {
	// AdvertisementType defines type of advertisement which has to be advertised.
	//
	// +kubebuilder:validation:Required
	advertisementType: #BGPAdvertisementType @go(AdvertisementType)

	// Service defines configuration options for advertisementType service.
	//
	// +kubebuilder:validation:Optional
	service?: null | #BGPServiceOptions @go(Service,*BGPServiceOptions)

	// Selector is a label selector to select objects of the type specified by AdvertisementType.
	// For the PodCIDR AdvertisementType it is not applicable. For other advertisement types,
	// if not specified, no objects of the type specified by AdvertisementType are selected for advertisement.
	//
	// +kubebuilder:validation:Optional
	selector?: null | slimv1.#LabelSelector @go(Selector,*slimv1.LabelSelector)

	// Attributes defines additional attributes to set to the advertised routes.
	// If not specified, no additional attributes are set.
	//
	// +kubebuilder:validation:Optional
	attributes?: null | #BGPAttributes @go(Attributes,*BGPAttributes)
}

// BGPServiceOptions defines the configuration for Service advertisement type.
#BGPServiceOptions: {
	// Addresses is a list of service address types which needs to be advertised via BGP.
	//
	// +kubebuilder:validation:Required
	// +kubebuilder:validation:MinItems=1
	addresses?: [...#BGPServiceAddressType] @go(Addresses,[]BGPServiceAddressType)

	// IPv4 mask to aggregate BGP route advertisements of service
	//
	// +kubebuilder:validation:Minimum=0
	// +kubebuilder:validation:Maximum=31
	// +kubebuilder:validation:Optional
	aggregationLengthIPv4?: null | int16 @go(AggregationLengthIPv4,*int16)

	// IPv6 mask to aggregate BGP route advertisements of service
	//
	// +kubebuilder:validation:Minimum=0
	// +kubebuilder:validation:Maximum=127
	// +kubebuilder:validation:Optional
	aggregationLengthIPv6?: null | int16 @go(AggregationLengthIPv6,*int16)
}

// BGPAttributes defines additional attributes to set to the advertised NLRIs.
#BGPAttributes: {
	// Communities sets the community attributes in the route.
	// If not specified, no community attribute is set.
	//
	// +kubebuilder:validation:Optional
	communities?: null | #BGPCommunities @go(Communities,*BGPCommunities)

	// LocalPreference sets the local preference attribute in the route.
	// If not specified, no local preference attribute is set.
	//
	// +kubebuilder:validation:Optional
	localPreference?: null | int64 @go(LocalPreference,*int64)
}
