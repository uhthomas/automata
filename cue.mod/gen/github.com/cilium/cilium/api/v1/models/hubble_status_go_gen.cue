// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cilium/cilium/api/v1/models

package models

import "github.com/go-openapi/strfmt"

// HubbleStatus Status of the Hubble server
//
// +k8s:deepcopy-gen=true
//
// swagger:model HubbleStatus
#HubbleStatus: {
	// Human readable status/error/warning message
	msg?: string @go(Msg)

	// observer
	observer?: null | #HubbleStatusObserver @go(Observer,*HubbleStatusObserver)

	// State the component is in
	// Enum: ["Ok","Warning","Failure","Disabled"]
	state?: string @go(State)
}

// HubbleStatusStateOk captures enum value "Ok"
#HubbleStatusStateOk: "Ok"

// HubbleStatusStateWarning captures enum value "Warning"
#HubbleStatusStateWarning: "Warning"

// HubbleStatusStateFailure captures enum value "Failure"
#HubbleStatusStateFailure: "Failure"

// HubbleStatusStateDisabled captures enum value "Disabled"
#HubbleStatusStateDisabled: "Disabled"

// HubbleStatusObserver Status of the Hubble observer
//
// +k8s:deepcopy-gen=true
//
// swagger:model HubbleStatusObserver
#HubbleStatusObserver: {
	// Current number of flows this Hubble observer stores
	"current-flows"?: int64 @go(CurrentFlows)

	// Maximum number of flows this Hubble observer is able to store
	"max-flows"?: int64 @go(MaxFlows)

	// Total number of flows this Hubble observer has seen
	"seen-flows"?: int64 @go(SeenFlows)

	// Uptime of this Hubble observer instance
	// Format: duration
	uptime?: strfmt.#Duration @go(Uptime)
}
