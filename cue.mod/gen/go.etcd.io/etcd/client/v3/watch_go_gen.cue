// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go go.etcd.io/etcd/client/v3

package clientv3

import (
	"go.etcd.io/etcd/api/v3/mvccpb"
	pb "go.etcd.io/etcd/api/v3/etcdserverpb"
)

#EventTypeDelete:      mvccpb.#Event_EventType & 1
#EventTypePut:         mvccpb.#Event_EventType & 0
_#closeSendErrTimeout: int & 250000000

// AutoWatchID is the watcher ID passed in WatchStream.Watch when no
// user-provided ID is available. If pass, an ID will automatically be assigned.
#AutoWatchID: 0

// InvalidWatchID represents an invalid watch ID and prevents duplication with an existing watch.
#InvalidWatchID: -1

#Event: mvccpb.#Event

#Watcher: _

#WatchResponse: {
	Header: pb.#ResponseHeader
	Events: [...null | #Event] @go(,[]*Event)

	// CompactRevision is the minimum revision the watcher may receive.
	CompactRevision: int64

	// Canceled is used to indicate watch failure.
	// If the watch failed and the stream was about to close, before the channel is closed,
	// the channel sends a final response that has Canceled set to true with a non-nil Err().
	Canceled: bool

	// Created is used to indicate the creation of the watcher.
	Created: bool
}

// watchStreamRequest is a union of the supported watch request operation types
_#watchStreamRequest: _

// progressRequest is issued by the subscriber to request watch progress
_#progressRequest: {}

// ctx with only the values; never Done
_#valCtx: {
	Context: _ @go(,context.Context)
}
